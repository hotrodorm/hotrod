<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.branch">

  <!-- columns -->

  <sql id="columns">
    id,
    name,
    type
  </sql>

  <sql id="columnsWithAlias">
    ${alias}.id,
    ${alias}.name,
    ${alias}.type
  </sql>

  <resultMap id="allColumns" type="com.myapp.daos.BranchImpl">
    <id property="id" column="ID" />
    <result property="name" column="NAME" />
    <result property="type" column="TYPE" />
  </resultMap>

  <!-- select by PK -->

  <select id="selectByPK" resultMap="allColumns">
    select
      <include refid="columns" />
     from branch
     where
      id = #{id,jdbcType=INTEGER}
  </select>

  <!-- no select by unique indexes since there are no UI (besides the PK) -->

  <!-- select by example -->

  <select id="selectByExample" resultMap="allColumns">
    select
      <include refid="columns" />
     from branch
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="p.id != null">
        and id = #{p.id,jdbcType=INTEGER}
      </if>
      <if test="p.name != null">
        and name = #{p.name,jdbcType=VARCHAR}
      </if>
      <if test="p.type != null">
        and type = #{p.type,jdbcType=INTEGER}
      </if>
    </trim>
    <if test="o != null">
      order by ${o}
    </if>
  </select>

  <!-- select by criteria -->

  <select id="selectByCriteria" resultMap="allColumns">
    ${sql}
  </select>

  <!-- insert (no auto-generated columns) -->

  <insert id="insert">
    insert into branch (
      <trim prefixOverrides=", ">
        <if test="true">, id</if>
        <if test="true">, name</if>
        <if test="true">, type</if>
      </trim>
      ) values (
      <trim prefixOverrides=", ">
        <if test="true">, #{id,jdbcType=INTEGER}</if>
        <if test="true">, #{name,jdbcType=VARCHAR}</if>
        <if test="true">, #{type,jdbcType=INTEGER}</if>
      </trim>
      )
  </insert>

  <!-- update by PK -->

  <update id="updateByPK">
    update branch set
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
     where
      id = #{id,jdbcType=INTEGER}
  </update>

  <!-- delete by PK -->

  <delete id="deleteByPK">
    delete from branch
     where
      id = #{id,jdbcType=INTEGER}
  </delete>

  <!-- update by example -->

  <update id="updateByExample">
    update branch
    <set>
      <if test="values.id != null">id = #{values.id,jdbcType=INTEGER},</if>
      <if test="values.name != null">name = #{values.name,jdbcType=VARCHAR},</if>
      <if test="values.type != null">type = #{values.type,jdbcType=INTEGER},</if>
    </set>
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="filter.id != null">
        and id = #{filter.id,jdbcType=INTEGER}
      </if>
      <if test="filter.name != null">
        and name = #{filter.name,jdbcType=VARCHAR}
      </if>
      <if test="filter.type != null">
        and type = #{filter.type,jdbcType=INTEGER}
      </if>
    </trim>
  </update>

  <!-- update by criteria -->

  <select id="updateByCriteria">
    ${sql}
  </select>

  <!-- delete by example -->

  <delete id="deleteByExample">
    delete from branch
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="id != null">
        and id = #{id,jdbcType=INTEGER}
      </if>
      <if test="name != null">
        and name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="type != null">
        and type = #{type,jdbcType=INTEGER}
      </if>
    </trim>
  </delete>

  <!-- delete by criteria -->

  <select id="deleteByCriteria">
    ${sql}
  </select>

</mapper>
