<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.account">

  <!-- columns -->

  <sql id="columns">
    "ID",
    "PARENT_ID",
    "BRANCH_ID"
  </sql>

  <sql id="columnsWithAlias">
    ${alias}."ID",
    ${alias}."PARENT_ID",
    ${alias}."BRANCH_ID"
  </sql>

  <resultMap id="allColumns" type="app.daos.AccountVO">
    <id property="id" column="ID" />
    <result property="parentId" column="PARENT_ID" />
    <result property="branchId" column="BRANCH_ID" />
  </resultMap>

  <!-- select by PK -->

  <select id="selectByPK" resultMap="allColumns">
    select
      <include refid="columns" />
     from account
     where
      "ID" = #{id,jdbcType=NUMERIC}
  </select>

  <!-- no select by unique indexes since there are no UI (besides the PK) -->

  <!-- select by example -->

  <select id="selectByExample" resultMap="allColumns">
    select
      <include refid="columns" />
     from account
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="p.id != null">
        and "ID" = #{p.id,jdbcType=NUMERIC}
      </if>
      <if test="p.parentId != null">
        and "PARENT_ID" = #{p.parentId,jdbcType=NUMERIC}
      </if>
      <if test="p.branchId != null">
        and "BRANCH_ID" = #{p.branchId,jdbcType=NUMERIC}
      </if>
    </trim>
    <if test="o != null">
      order by ${o}
    </if>
  </select>

  <!-- select by criteria -->

  <select id="selectByCriteria" resultMap="allColumns">
    ${sql}
  </select>

  <!-- insert (integrates sequences, and does not integrate identities) -->

  <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
    insert into account (
      <trim prefixOverrides=", ">
        <if test="true">, "ID"</if>
        <if test="true">, "PARENT_ID"</if>
        <if test="true">, "BRANCH_ID"</if>
      </trim>
      ) values (
      <trim prefixOverrides=", ">
        <if test="true">, seq1.nextval</if>
        <if test="true">, #{parentId,jdbcType=NUMERIC}</if>
        <if test="true">, #{branchId,jdbcType=NUMERIC}</if>
      </trim>
      )
  </insert>

  <!-- update by PK -->

  <update id="updateByPK">
    update account set
      "PARENT_ID" = #{parentId,jdbcType=NUMERIC},
      "BRANCH_ID" = #{branchId,jdbcType=NUMERIC}
     where
      "ID" = #{id,jdbcType=NUMERIC}
  </update>

  <!-- delete by PK -->

  <delete id="deleteByPK">
    delete from account
     where
      "ID" = #{id,jdbcType=NUMERIC}
  </delete>

  <!-- update by example -->

  <update id="updateByExample">
    update account
    <set>
      <if test="values.id != null">"ID" = #{values.id,jdbcType=NUMERIC},</if>
      <if test="values.parentId != null">"PARENT_ID" = #{values.parentId,jdbcType=NUMERIC},</if>
      <if test="values.branchId != null">"BRANCH_ID" = #{values.branchId,jdbcType=NUMERIC},</if>
    </set>
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="filter.id != null">
        and "ID" = #{filter.id,jdbcType=NUMERIC}
      </if>
      <if test="filter.parentId != null">
        and "PARENT_ID" = #{filter.parentId,jdbcType=NUMERIC}
      </if>
      <if test="filter.branchId != null">
        and "BRANCH_ID" = #{filter.branchId,jdbcType=NUMERIC}
      </if>
    </trim>
  </update>

  <!-- update by criteria -->

  <select id="updateByCriteria">
    ${sql}
  </select>

  <!-- delete by example -->

  <delete id="deleteByExample">
    delete from account
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="id != null">
        and "ID" = #{id,jdbcType=NUMERIC}
      </if>
      <if test="parentId != null">
        and "PARENT_ID" = #{parentId,jdbcType=NUMERIC}
      </if>
      <if test="branchId != null">
        and "BRANCH_ID" = #{branchId,jdbcType=NUMERIC}
      </if>
    </trim>
  </delete>

  <!-- delete by criteria -->

  <select id="deleteByCriteria">
    ${sql}
  </select>

</mapper>
