create table numbers (
  id number(9) not null primary key,
  
-- number, numeric, decimal, dec
  num1 number(2), -- max 38 digits
  num2 number(4), -- max 38 digits
  num3 number(9), -- max 38 digits
  num4 number(18), -- max 38 digits
  num5 number(38), -- max 38 digits
  num6 number(10,2), -- max 38 digits
  num7 number,
  
  num8 binary_float, -- 32-bit single-precision floating point
  num9 binary_double, -- 64-bit single-precision floating point
  num10 float,
  num11 real,
  num12 double precision,
  
  num20 smallint,
  num21 integer,
  num22 int
);

insert into numbers(id, num1, num2, num3, num4, num5, num6, num7, num8, num9, num10, num11, num12, num20, num21, num22) values(
  1, 12, 1234, 123456789, 123456789012345678, 12345678901234567890123456789012345678, 123456.78, 901.234,
  123.456, 234.567, 345.678, 456.789, 567.890,
  12345, 123456789, 123456789
);

create table chars (
  id number(9) not null primary key,
  
  cha1 char(10), -- max 2000
  cha2 varchar(20), -- max 4000
  cha3 varchar2(20), -- max 4000
  cha4 nchar(30), -- max 2000 bytes (2000 or less characters)
  cha5 nvarchar2(40), -- max 4000 (4000 or less characters)
  cha6 clob, -- max 128 TB
  cha7 nclob -- max 128 TB
  -- cha10 long -- max 2 GB -- unsupported by MyBatis?
);

insert into chars (id, cha1, cha2,  cha3,  cha4,  cha5,  cha6,  cha7) values (
  1, 'abcdef', 'abcdef', 'abcdef', 'abcdef', 'abcdef', 'abcdef', 'abcdef' 
);

create table dates (
  id number(9) not null primary key,
  
  -- all types include dates in the range January 1, 4712 BCE through December 31, 9999 CE
  dat1 date, -- NO fractional seconds
  dat2 timestamp, -- WITH fractional seconds
  dat3 timestamp with time zone, -- WITH time zone, WITH fractional seconds
  dat4 timestamp with local time zone -- WITH relative time zone, WITH fractional seconds
);

insert into dates (id, dat1, dat2, dat3, dat4) values (
  1,
  timestamp '2024-01-01 12:34:56',
  timestamp '2024-01-01 12:34:56.123456789+03:00',
  timestamp '2024-01-01 12:34:56.123456789+03:00',
  timestamp '2024-01-01 12:34:56.123456789+03:00'
);

-- Not yet supported: bfile
create table binaries (
  id number(9) not null primary key,
  
  bin1 raw(500), -- Deprecated. Still usable. Size must be specified.
  bin2 long raw, -- Deprecated. Still usable, max 2GB; only 1 long raw column per table.
  bin3 blob -- 128 TB
  --bin4 bfile -- Deprecated. Read-only binary file. Size is limited by the OS/file system.  
);

insert into binaries (id, bin3) values (1, 'abcdef');

create type namearray2 as varray(3) of varchar2(10);

create type person_struct2 as object (id number(6), date_of_birth date);

create table other (
  id number(9) not null primary key,
  
--  row1 UROWID, -- not supported by this version of MyBatis?
  itv2 interval year to month,
  itv4 interval day to second,
--  oth1 XMLType, -- not supported by this version of MyBatis?
  oth2 UriType,
  names namearray2, 
  stu1 person_struct2,
  ref1 ref person_struct2
);

insert into other (id, itv2, itv4, oth2, names, stu1, ref1) values (
  1, INTERVAL '40' MONTH, INTERVAL '40' DAY, 
  httpuritype.createuri('http://abc.com'), 
  namearray2(('abc'), ('def')),
  null,
  null
);

-- === Model ===

create table product (
  id number(6),
  type varchar2(6),
  shipping number(6)
);

create table branch (
  id number(6) generated by default as identity primary key not null,
  "NaMe" varchar2(20),
  region varchar2(10),
  is_vip number(6)
);

insert into branch (id, region, is_vip) values (101, 'N', 1);
insert into branch (id, region, is_vip) values (102, 'S', 1);
insert into branch (id, region, is_vip) values (103, 'W', 0);
insert into branch (id, region, is_vip) values (104, 'E', 0);
insert into branch (id, region, is_vip) values (105, 'NE', 0);
insert into branch (id, region, is_vip) values (106, 'NW', 1);
insert into branch (id, region, is_vip) values (107, 'SE', 0);
 
create table account (
  id number(6) primary key not null,
  parent_id number(6) references account (id),
  branch_id number(6) references branch (id)
);

insert into account (id, parent_id, branch_id) values (1, null, 101);
insert into account (id, parent_id, branch_id) values (2, 1, 102);
insert into account (id, parent_id, branch_id) values (3, 1, 103);
insert into account (id, parent_id, branch_id) values (4, 3, 104);
insert into account (id, parent_id, branch_id) values (5, 4, 105);

create sequence seq1;

create table invoice (
  id number(6),
  account_id number(6),
  amount number(6),
  branch_id number(6),
  order_date date,
  type varchar(10),
  unpaid_balance number(6),
  status varchar2(10)
);

insert into invoice (id, account_id, amount, branch_id, order_date, type, unpaid_balance, status) values
  (10, 123, 100, 2, date '2024-03-15', 'VIP', 0, 'CONF');
  insert into invoice (id, account_id, amount, branch_id, order_date, type, unpaid_balance, status) values
  (11, 125, 500, 2, date '2024-03-16', 'NORTH', 50, 'PLACED');

create table invoice_line (
  invoice_id number(6),
  product_id number(6),
  line_total number(6)
);

create table payment (
  payment_date date,
  invoice_id number(6),
  amount number(6)
);

