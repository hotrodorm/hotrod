// Autogenerated by HotRod -- Do not edit.

package app.daos.primitives;

import java.io.Serializable;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.hotrod.runtime.cursors.Cursor;
import org.hotrod.runtime.livesql.queries.select.MyBatisCursor;

import org.hotrod.runtime.interfaces.DaoWithOrder;
import org.hotrod.runtime.interfaces.UpdateByExampleDao;
import org.hotrod.runtime.interfaces.OrderBy;

import app.daos.primitives.AbstractTypesDateTimeVO;
import app.daos.TypesDateTimeVO;

import java.util.Map;
import java.util.HashMap;

import org.hotrod.runtime.livesql.expressions.ResultSetColumn;
import org.hotrod.runtime.livesql.dialects.LiveSQLDialect;
import org.hotrod.runtime.livesql.metadata.NumberColumn;
import org.hotrod.runtime.livesql.metadata.StringColumn;
import org.hotrod.runtime.livesql.metadata.DateTimeColumn;
import org.hotrod.runtime.livesql.metadata.BooleanColumn;
import org.hotrod.runtime.livesql.metadata.ByteArrayColumn;
import org.hotrod.runtime.livesql.metadata.ObjectColumn;
import org.hotrod.runtime.livesql.metadata.Table;
import org.hotrod.runtime.livesql.expressions.predicates.Predicate;
import org.hotrod.runtime.livesql.metadata.AllColumns;
import org.hotrod.runtime.livesql.queries.select.CriteriaWherePhase;
import org.hotrod.runtime.livesql.queries.DeleteWherePhase;
import org.hotrod.runtime.livesql.queries.UpdateSetCompletePhase;
import org.hotrod.runtime.livesql.metadata.View;

import org.springframework.stereotype.Component;
import org.springframework.beans.BeansException;
import org.springframework.context.annotation.Lazy;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;

@Component
public class TypesDateTimeDAO implements Serializable, ApplicationContextAware {

  private static final long serialVersionUID = 1L;

  @Autowired
  private SqlSession sqlSession;

  @Autowired
  private LiveSQLDialect liveSQLDialect;

  private ApplicationContext applicationContext;

  @Override
  public void setApplicationContext(final ApplicationContext applicationContext) throws BeansException {
    this.applicationContext = applicationContext;
  }

  // select by primary key

  public app.daos.TypesDateTimeVO select(final java.lang.Integer id) {
    if (id == null)
      return null;
    app.daos.TypesDateTimeVO vo = new app.daos.TypesDateTimeVO();
    vo.setId(id);
    return this.sqlSession.selectOne("mappers.typesDateTime.selectByPK", vo);
  }

  // select by unique indexes: no unique indexes found (besides the PK) -- skipped

  // select by example

  public List<app.daos.TypesDateTimeVO> select(final app.daos.primitives.AbstractTypesDateTimeVO example, final TypesDateTimeOrderBy... orderBies)
      {
    DaoWithOrder<app.daos.primitives.AbstractTypesDateTimeVO, TypesDateTimeOrderBy> dwo = //
        new DaoWithOrder<>(example, orderBies);
    return this.sqlSession.selectList("mappers.typesDateTime.selectByExample", dwo);
  }

  public Cursor<app.daos.TypesDateTimeVO> selectCursor(final app.daos.primitives.AbstractTypesDateTimeVO example, final TypesDateTimeOrderBy... orderBies)
      {
    DaoWithOrder<app.daos.primitives.AbstractTypesDateTimeVO, TypesDateTimeOrderBy> dwo = //
        new DaoWithOrder<>(example, orderBies);
    return new MyBatisCursor<app.daos.TypesDateTimeVO>(this.sqlSession.selectCursor("mappers.typesDateTime.selectByExample", dwo));
  }

  // select by criteria

  public CriteriaWherePhase<app.daos.TypesDateTimeVO> select(final TypesDateTimeDAO.TypesDateTimeTable from,
      final Predicate predicate) {
    return new CriteriaWherePhase<app.daos.TypesDateTimeVO>(from, this.liveSQLDialect, this.sqlSession,
        predicate, "mappers.typesDateTime.selectByCriteria");
  }

  // select parent(s) by FKs: no imported keys found -- skipped

  // select children by FKs: no exported FKs found -- skipped

  // insert

  public app.daos.TypesDateTimeVO insert(final app.daos.primitives.AbstractTypesDateTimeVO vo) {
    String id = "mappers.typesDateTime.insert";
    this.sqlSession.insert(id, vo);
    app.daos.TypesDateTimeVO mo = new app.daos.TypesDateTimeVO();
    mo.setId(vo.getId());
    mo.setDat1(vo.getDat1());
    mo.setTs1(vo.getTs1());
    mo.setTs2(vo.getTs2());
    mo.setTs3(vo.getTs3());
    mo.setTs4(vo.getTs4());
    mo.setTs5(vo.getTs5());
    mo.setTim1(vo.getTim1());
    mo.setTim2(vo.getTim2());
    mo.setTim3(vo.getTim3());
    mo.setTim4(vo.getTim4());
    mo.setTim5(vo.getTim5());
    mo.setIvt1(vo.getIvt1());
    mo.setIvt2(vo.getIvt2());
    mo.setIvt3(vo.getIvt3());
    mo.setIvt4(vo.getIvt4());
    mo.setIvt5(vo.getIvt5());
    mo.setIvt6(vo.getIvt6());
    mo.setIvt7(vo.getIvt7());
    mo.setIvt8(vo.getIvt8());
    mo.setIvt9(vo.getIvt9());
    mo.setIvt10(vo.getIvt10());
    mo.setIvt11(vo.getIvt11());
    mo.setIvt12(vo.getIvt12());
    mo.setIvt13(vo.getIvt13());
    mo.setIvt14(vo.getIvt14());
    mo.setIvt15(vo.getIvt15());
    mo.setIvt16(vo.getIvt16());
    mo.setIvt17(vo.getIvt17());
    return mo;
  }

  // update by PK

  public int update(final app.daos.TypesDateTimeVO vo) {
    if (vo.id == null) return 0;
    return this.sqlSession.update("mappers.typesDateTime.updateByPK", vo);
  }

  // delete by PK

  public int delete(final java.lang.Integer id) {
    if (id == null) return 0;
    app.daos.TypesDateTimeVO vo = new app.daos.TypesDateTimeVO();
    vo.setId(id);
    if (vo.id == null) return 0;
    return this.sqlSession.delete("mappers.typesDateTime.deleteByPK", vo);
  }

  // update by example

  public int update(final app.daos.primitives.AbstractTypesDateTimeVO example, final app.daos.primitives.AbstractTypesDateTimeVO updateValues) {
    UpdateByExampleDao<app.daos.primitives.AbstractTypesDateTimeVO> fvd = //
      new UpdateByExampleDao<app.daos.primitives.AbstractTypesDateTimeVO>(example, updateValues);
    return this.sqlSession.update("mappers.typesDateTime.updateByExample", fvd);
  }

  // update by criteria

  public UpdateSetCompletePhase update(final app.daos.primitives.AbstractTypesDateTimeVO updateValues, final TypesDateTimeDAO.TypesDateTimeTable tableOrView, final Predicate predicate) {
    Map<String, Object> values = new HashMap<>();
    if (updateValues.getId() != null) values.put("id", updateValues.getId());
    if (updateValues.getDat1() != null) values.put("dat1", updateValues.getDat1());
    if (updateValues.getTs1() != null) values.put("ts1", updateValues.getTs1());
    if (updateValues.getTs2() != null) values.put("ts2", updateValues.getTs2());
    if (updateValues.getTs3() != null) values.put("ts3", updateValues.getTs3());
    if (updateValues.getTs4() != null) values.put("ts4", updateValues.getTs4());
    if (updateValues.getTs5() != null) values.put("ts5", updateValues.getTs5());
    if (updateValues.getTim1() != null) values.put("tim1", updateValues.getTim1());
    if (updateValues.getTim2() != null) values.put("tim2", updateValues.getTim2());
    if (updateValues.getTim3() != null) values.put("tim3", updateValues.getTim3());
    if (updateValues.getTim4() != null) values.put("tim4", updateValues.getTim4());
    if (updateValues.getTim5() != null) values.put("tim5", updateValues.getTim5());
    if (updateValues.getIvt1() != null) values.put("ivt1", updateValues.getIvt1());
    if (updateValues.getIvt2() != null) values.put("ivt2", updateValues.getIvt2());
    if (updateValues.getIvt3() != null) values.put("ivt3", updateValues.getIvt3());
    if (updateValues.getIvt4() != null) values.put("ivt4", updateValues.getIvt4());
    if (updateValues.getIvt5() != null) values.put("ivt5", updateValues.getIvt5());
    if (updateValues.getIvt6() != null) values.put("ivt6", updateValues.getIvt6());
    if (updateValues.getIvt7() != null) values.put("ivt7", updateValues.getIvt7());
    if (updateValues.getIvt8() != null) values.put("ivt8", updateValues.getIvt8());
    if (updateValues.getIvt9() != null) values.put("ivt9", updateValues.getIvt9());
    if (updateValues.getIvt10() != null) values.put("ivt10", updateValues.getIvt10());
    if (updateValues.getIvt11() != null) values.put("ivt11", updateValues.getIvt11());
    if (updateValues.getIvt12() != null) values.put("ivt12", updateValues.getIvt12());
    if (updateValues.getIvt13() != null) values.put("ivt13", updateValues.getIvt13());
    if (updateValues.getIvt14() != null) values.put("ivt14", updateValues.getIvt14());
    if (updateValues.getIvt15() != null) values.put("ivt15", updateValues.getIvt15());
    if (updateValues.getIvt16() != null) values.put("ivt16", updateValues.getIvt16());
    if (updateValues.getIvt17() != null) values.put("ivt17", updateValues.getIvt17());
    return new UpdateSetCompletePhase(tableOrView, this.liveSQLDialect, this.sqlSession,
      "mappers.typesDateTime.updateByCriteria", predicate, values);
  }


  // delete by example

  public int delete(final app.daos.primitives.AbstractTypesDateTimeVO example) {
    return this.sqlSession.delete("mappers.typesDateTime.deleteByExample", example);
  }

  // delete by criteria

  public DeleteWherePhase delete(final TypesDateTimeDAO.TypesDateTimeTable from, final Predicate predicate) {
    return new DeleteWherePhase(from, this.liveSQLDialect, this.sqlSession,
      "mappers.typesDateTime.deleteByCriteria", predicate);
  }

  // DAO ordering

  public enum TypesDateTimeOrderBy implements OrderBy {

    ID("public.types_date_time", "id", true), //
    ID$DESC("public.types_date_time", "id", false), //
    DAT1("public.types_date_time", "dat1", true), //
    DAT1$DESC("public.types_date_time", "dat1", false), //
    TS1("public.types_date_time", "ts1", true), //
    TS1$DESC("public.types_date_time", "ts1", false), //
    TS2("public.types_date_time", "ts2", true), //
    TS2$DESC("public.types_date_time", "ts2", false), //
    TS3("public.types_date_time", "ts3", true), //
    TS3$DESC("public.types_date_time", "ts3", false), //
    TS4("public.types_date_time", "ts4", true), //
    TS4$DESC("public.types_date_time", "ts4", false), //
    TS5("public.types_date_time", "ts5", true), //
    TS5$DESC("public.types_date_time", "ts5", false), //
    TIM1("public.types_date_time", "tim1", true), //
    TIM1$DESC("public.types_date_time", "tim1", false), //
    TIM2("public.types_date_time", "tim2", true), //
    TIM2$DESC("public.types_date_time", "tim2", false), //
    TIM3("public.types_date_time", "tim3", true), //
    TIM3$DESC("public.types_date_time", "tim3", false), //
    TIM4("public.types_date_time", "tim4", true), //
    TIM4$DESC("public.types_date_time", "tim4", false), //
    TIM5("public.types_date_time", "tim5", true), //
    TIM5$DESC("public.types_date_time", "tim5", false), //
    IVT1("public.types_date_time", "ivt1", true), //
    IVT1$DESC("public.types_date_time", "ivt1", false), //
    IVT2("public.types_date_time", "ivt2", true), //
    IVT2$DESC("public.types_date_time", "ivt2", false), //
    IVT3("public.types_date_time", "ivt3", true), //
    IVT3$DESC("public.types_date_time", "ivt3", false), //
    IVT4("public.types_date_time", "ivt4", true), //
    IVT4$DESC("public.types_date_time", "ivt4", false), //
    IVT5("public.types_date_time", "ivt5", true), //
    IVT5$DESC("public.types_date_time", "ivt5", false), //
    IVT6("public.types_date_time", "ivt6", true), //
    IVT6$DESC("public.types_date_time", "ivt6", false), //
    IVT7("public.types_date_time", "ivt7", true), //
    IVT7$DESC("public.types_date_time", "ivt7", false), //
    IVT8("public.types_date_time", "ivt8", true), //
    IVT8$DESC("public.types_date_time", "ivt8", false), //
    IVT9("public.types_date_time", "ivt9", true), //
    IVT9$DESC("public.types_date_time", "ivt9", false), //
    IVT10("public.types_date_time", "ivt10", true), //
    IVT10$DESC("public.types_date_time", "ivt10", false), //
    IVT11("public.types_date_time", "ivt11", true), //
    IVT11$DESC("public.types_date_time", "ivt11", false), //
    IVT12("public.types_date_time", "ivt12", true), //
    IVT12$DESC("public.types_date_time", "ivt12", false), //
    IVT13("public.types_date_time", "ivt13", true), //
    IVT13$DESC("public.types_date_time", "ivt13", false), //
    IVT14("public.types_date_time", "ivt14", true), //
    IVT14$DESC("public.types_date_time", "ivt14", false), //
    IVT15("public.types_date_time", "ivt15", true), //
    IVT15$DESC("public.types_date_time", "ivt15", false), //
    IVT16("public.types_date_time", "ivt16", true), //
    IVT16$DESC("public.types_date_time", "ivt16", false), //
    IVT17("public.types_date_time", "ivt17", true), //
    IVT17$DESC("public.types_date_time", "ivt17", false);

    private TypesDateTimeOrderBy(final String tableName, final String columnName,
        boolean ascending) {
      this.tableName = tableName;
      this.columnName = columnName;
      this.ascending = ascending;
    }

    private String tableName;
    private String columnName;
    private boolean ascending;

    public String getTableName() {
      return this.tableName;
    }

    public String getColumnName() {
      return this.columnName;
    }

    public boolean isAscending() {
      return this.ascending;
    }

  }

  // Database Table metadata

  public static TypesDateTimeTable newTable() {
    return new TypesDateTimeTable();
  }

  public static TypesDateTimeTable newTable(final String alias) {
    return new TypesDateTimeTable(alias);
  }

  public static class TypesDateTimeTable extends Table {

    // Properties

    public NumberColumn id;
    public DateTimeColumn dat1;
    public DateTimeColumn ts1;
    public DateTimeColumn ts2;
    public DateTimeColumn ts3;
    public DateTimeColumn ts4;
    public DateTimeColumn ts5;
    public DateTimeColumn tim1;
    public DateTimeColumn tim2;
    public DateTimeColumn tim3;
    public DateTimeColumn tim4;
    public DateTimeColumn tim5;
    public ObjectColumn ivt1;
    public ObjectColumn ivt2;
    public ObjectColumn ivt3;
    public ObjectColumn ivt4;
    public ObjectColumn ivt5;
    public ObjectColumn ivt6;
    public ObjectColumn ivt7;
    public ObjectColumn ivt8;
    public ObjectColumn ivt9;
    public ObjectColumn ivt10;
    public ObjectColumn ivt11;
    public ObjectColumn ivt12;
    public ObjectColumn ivt13;
    public ObjectColumn ivt14;
    public ObjectColumn ivt15;
    public ObjectColumn ivt16;
    public ObjectColumn ivt17;

    // Getters

    public AllColumns star() {
      return new AllColumns(this, this.id, this.dat1, this.ts1, this.ts2, this.ts3, this.ts4, this.ts5, this.tim1, this.tim2, this.tim3, this.tim4, this.tim5, this.ivt1, this.ivt2, this.ivt3, this.ivt4, this.ivt5, this.ivt6, this.ivt7, this.ivt8, this.ivt9, this.ivt10, this.ivt11, this.ivt12, this.ivt13, this.ivt14, this.ivt15, this.ivt16, this.ivt17);
    }

    // Constructors

    TypesDateTimeTable() {
      super(null, "public", "types_date_time", "Table", null);
      initialize();
    }

    TypesDateTimeTable(final String alias) {
      super(null, "public", "types_date_time", "Table", alias);
      initialize();
    }

    // Initialization

    private void initialize() {
      this.id = new NumberColumn(this, "id", "id", "int4", 10, 0);
      this.dat1 = new DateTimeColumn(this, "dat1", "dat1", "date", 13, 0);
      this.ts1 = new DateTimeColumn(this, "ts1", "ts1", "timestamp", 29, 6);
      this.ts2 = new DateTimeColumn(this, "ts2", "ts2", "timestamp", 29, 6);
      this.ts3 = new DateTimeColumn(this, "ts3", "ts3", "timestamptz", 35, 6);
      this.ts4 = new DateTimeColumn(this, "ts4", "ts4", "timestamptz", 35, 6);
      this.ts5 = new DateTimeColumn(this, "ts5", "ts5", "timestamp", 29, 6);
      this.tim1 = new DateTimeColumn(this, "tim1", "tim1", "time", 15, 6);
      this.tim2 = new DateTimeColumn(this, "tim2", "tim2", "time", 15, 6);
      this.tim3 = new DateTimeColumn(this, "tim3", "tim3", "timetz", 21, 6);
      this.tim4 = new DateTimeColumn(this, "tim4", "tim4", "timetz", 21, 6);
      this.tim5 = new DateTimeColumn(this, "tim5", "tim5", "time", 15, 6);
      this.ivt1 = new ObjectColumn(this, "ivt1", "ivt1", "interval", 49, 65535);
      this.ivt2 = new ObjectColumn(this, "ivt2", "ivt2", "interval", 49, 65535);
      this.ivt3 = new ObjectColumn(this, "ivt3", "ivt3", "interval", 49, 65535);
      this.ivt4 = new ObjectColumn(this, "ivt4", "ivt4", "interval", 49, 65535);
      this.ivt5 = new ObjectColumn(this, "ivt5", "ivt5", "interval", 49, 65535);
      this.ivt6 = new ObjectColumn(this, "ivt6", "ivt6", "interval", 49, 65535);
      this.ivt7 = new ObjectColumn(this, "ivt7", "ivt7", "interval", 49, 5);
      this.ivt8 = new ObjectColumn(this, "ivt8", "ivt8", "interval", 49, 65535);
      this.ivt9 = new ObjectColumn(this, "ivt9", "ivt9", "interval", 49, 65535);
      this.ivt10 = new ObjectColumn(this, "ivt10", "ivt10", "interval", 49, 65535);
      this.ivt11 = new ObjectColumn(this, "ivt11", "ivt11", "interval", 49, 65535);
      this.ivt12 = new ObjectColumn(this, "ivt12", "ivt12", "interval", 49, 5);
      this.ivt13 = new ObjectColumn(this, "ivt13", "ivt13", "interval", 49, 65535);
      this.ivt14 = new ObjectColumn(this, "ivt14", "ivt14", "interval", 49, 65535);
      this.ivt15 = new ObjectColumn(this, "ivt15", "ivt15", "interval", 49, 5);
      this.ivt16 = new ObjectColumn(this, "ivt16", "ivt16", "interval", 49, 65535);
      this.ivt17 = new ObjectColumn(this, "ivt17", "ivt17", "interval", 49, 5);
    }

  }

}
