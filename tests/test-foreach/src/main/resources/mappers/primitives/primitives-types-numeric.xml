<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.typesNumeric">

  <!-- columns -->

  <sql id="columns">
    int1,
    int2,
    int3,
    int4,
    int5,
    int6,
    dec1,
    dec2,
    dec3,
    dec4,
    dec5,
    dec6,
    dec7,
    flo1,
    flo2
  </sql>

  <sql id="columnsWithAlias">
    ${alias}.int1,
    ${alias}.int2,
    ${alias}.int3,
    ${alias}.int4,
    ${alias}.int5,
    ${alias}.int6,
    ${alias}.dec1,
    ${alias}.dec2,
    ${alias}.dec3,
    ${alias}.dec4,
    ${alias}.dec5,
    ${alias}.dec6,
    ${alias}.dec7,
    ${alias}.flo1,
    ${alias}.flo2
  </sql>

  <resultMap id="allColumns" type="app.daos.TypesNumericVO">
    <result property="int1" column="int1" />
    <result property="int2" column="int2" />
    <result property="int3" column="int3" />
    <result property="int4" column="int4" />
    <result property="int5" column="int5" />
    <result property="int6" column="int6" />
    <result property="dec1" column="dec1" />
    <result property="dec2" column="dec2" />
    <result property="dec3" column="dec3" />
    <result property="dec4" column="dec4" />
    <result property="dec5" column="dec5" />
    <result property="dec6" column="dec6" />
    <result property="dec7" column="dec7" />
    <result property="flo1" column="flo1" />
    <result property="flo2" column="flo2" />
  </resultMap>

  <!-- select by PK: no mapping generated, since the table does not have a PK -->

  <!-- select by unique indexes: no mappings generated, since the table does not have UIs -->

  <!-- select by example -->

  <select id="selectByExample" resultMap="allColumns">
    select
      <include refid="columns" />
     from public.types_numeric
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="p.int1 != null">
        and int1 = #{p.int1,jdbcType=SMALLINT}
      </if>
      <if test="p.int2 != null">
        and int2 = #{p.int2,jdbcType=INTEGER}
      </if>
      <if test="p.int3 != null">
        and int3 = #{p.int3,jdbcType=BIGINT}
      </if>
      <if test="p.int4 != null">
        and int4 = #{p.int4,jdbcType=SMALLINT}
      </if>
      <if test="p.int5 != null">
        and int5 = #{p.int5,jdbcType=INTEGER}
      </if>
      <if test="p.int6 != null">
        and int6 = #{p.int6,jdbcType=BIGINT}
      </if>
      <if test="p.dec1 != null">
        and dec1 = #{p.dec1,jdbcType=NUMERIC}
      </if>
      <if test="p.dec2 != null">
        and dec2 = #{p.dec2,jdbcType=NUMERIC}
      </if>
      <if test="p.dec3 != null">
        and dec3 = #{p.dec3,jdbcType=NUMERIC}
      </if>
      <if test="p.dec4 != null">
        and dec4 = #{p.dec4,jdbcType=NUMERIC}
      </if>
      <if test="p.dec5 != null">
        and dec5 = #{p.dec5,jdbcType=NUMERIC}
      </if>
      <if test="p.dec6 != null">
        and dec6 = #{p.dec6,jdbcType=NUMERIC}
      </if>
      <if test="p.dec7 != null">
        and dec7 = #{p.dec7,jdbcType=NUMERIC}
      </if>
      <if test="p.flo1 != null">
        and flo1 = #{p.flo1,jdbcType=REAL}
      </if>
      <if test="p.flo2 != null">
        and flo2 = #{p.flo2,jdbcType=DOUBLE}
      </if>
    </trim>
    <if test="o != null">
      order by ${o}
    </if>
  </select>

  <!-- select by criteria -->

  <select id="selectByCriteria" resultMap="allColumns">
    ${sql}
  </select>

  <!-- insert (does not integrate sequences, and integrates identities) -->

  <insert id="insert" useGeneratedKeys="true" keyProperty="int4,int5,int6" keyColumn="int4,int5,int6">
    insert into public.types_numeric (
      <trim prefixOverrides=", ">
        <if test="true">, int1</if>
        <if test="true">, int2</if>
        <if test="true">, int3</if>
        <if test="int4 != null">, int4</if>
        <if test="int5 != null">, int5</if>
        <if test="int6 != null">, int6</if>
        <if test="true">, dec1</if>
        <if test="true">, dec2</if>
        <if test="true">, dec3</if>
        <if test="true">, dec4</if>
        <if test="true">, dec5</if>
        <if test="true">, dec6</if>
        <if test="true">, dec7</if>
        <if test="true">, flo1</if>
        <if test="true">, flo2</if>
      </trim>
      ) values (
      <trim prefixOverrides=", ">
        <if test="true">, #{int1,jdbcType=SMALLINT}</if>
        <if test="true">, #{int2,jdbcType=INTEGER}</if>
        <if test="true">, #{int3,jdbcType=BIGINT}</if>
        <if test="int4 != null">, #{int4,jdbcType=SMALLINT}</if>
        <if test="int5 != null">, #{int5,jdbcType=INTEGER}</if>
        <if test="int6 != null">, #{int6,jdbcType=BIGINT}</if>
        <if test="true">, #{dec1,jdbcType=NUMERIC}</if>
        <if test="true">, #{dec2,jdbcType=NUMERIC}</if>
        <if test="true">, #{dec3,jdbcType=NUMERIC}</if>
        <if test="true">, #{dec4,jdbcType=NUMERIC}</if>
        <if test="true">, #{dec5,jdbcType=NUMERIC}</if>
        <if test="true">, #{dec6,jdbcType=NUMERIC}</if>
        <if test="true">, #{dec7,jdbcType=NUMERIC}</if>
        <if test="true">, #{flo1,jdbcType=REAL}</if>
        <if test="true">, #{flo2,jdbcType=DOUBLE}</if>
      </trim>
      )
  </insert>

  <!-- update by PK: no update mapping generated, since the table does not have a PK -->

  <!-- delete by PK: no delete mapping generated, since the table does not have a PK -->

  <!-- update by example -->

  <update id="updateByExample">
    update public.types_numeric
    <set>
      <if test="values.int1 != null">int1 = #{values.int1,jdbcType=SMALLINT},</if>
      <if test="values.int2 != null">int2 = #{values.int2,jdbcType=INTEGER},</if>
      <if test="values.int3 != null">int3 = #{values.int3,jdbcType=BIGINT},</if>
      <if test="values.int4 != null">int4 = #{values.int4,jdbcType=SMALLINT},</if>
      <if test="values.int5 != null">int5 = #{values.int5,jdbcType=INTEGER},</if>
      <if test="values.int6 != null">int6 = #{values.int6,jdbcType=BIGINT},</if>
      <if test="values.dec1 != null">dec1 = #{values.dec1,jdbcType=NUMERIC},</if>
      <if test="values.dec2 != null">dec2 = #{values.dec2,jdbcType=NUMERIC},</if>
      <if test="values.dec3 != null">dec3 = #{values.dec3,jdbcType=NUMERIC},</if>
      <if test="values.dec4 != null">dec4 = #{values.dec4,jdbcType=NUMERIC},</if>
      <if test="values.dec5 != null">dec5 = #{values.dec5,jdbcType=NUMERIC},</if>
      <if test="values.dec6 != null">dec6 = #{values.dec6,jdbcType=NUMERIC},</if>
      <if test="values.dec7 != null">dec7 = #{values.dec7,jdbcType=NUMERIC},</if>
      <if test="values.flo1 != null">flo1 = #{values.flo1,jdbcType=REAL},</if>
      <if test="values.flo2 != null">flo2 = #{values.flo2,jdbcType=DOUBLE},</if>
    </set>
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="filter.int1 != null">
        and int1 = #{filter.int1,jdbcType=SMALLINT}
      </if>
      <if test="filter.int2 != null">
        and int2 = #{filter.int2,jdbcType=INTEGER}
      </if>
      <if test="filter.int3 != null">
        and int3 = #{filter.int3,jdbcType=BIGINT}
      </if>
      <if test="filter.int4 != null">
        and int4 = #{filter.int4,jdbcType=SMALLINT}
      </if>
      <if test="filter.int5 != null">
        and int5 = #{filter.int5,jdbcType=INTEGER}
      </if>
      <if test="filter.int6 != null">
        and int6 = #{filter.int6,jdbcType=BIGINT}
      </if>
      <if test="filter.dec1 != null">
        and dec1 = #{filter.dec1,jdbcType=NUMERIC}
      </if>
      <if test="filter.dec2 != null">
        and dec2 = #{filter.dec2,jdbcType=NUMERIC}
      </if>
      <if test="filter.dec3 != null">
        and dec3 = #{filter.dec3,jdbcType=NUMERIC}
      </if>
      <if test="filter.dec4 != null">
        and dec4 = #{filter.dec4,jdbcType=NUMERIC}
      </if>
      <if test="filter.dec5 != null">
        and dec5 = #{filter.dec5,jdbcType=NUMERIC}
      </if>
      <if test="filter.dec6 != null">
        and dec6 = #{filter.dec6,jdbcType=NUMERIC}
      </if>
      <if test="filter.dec7 != null">
        and dec7 = #{filter.dec7,jdbcType=NUMERIC}
      </if>
      <if test="filter.flo1 != null">
        and flo1 = #{filter.flo1,jdbcType=REAL}
      </if>
      <if test="filter.flo2 != null">
        and flo2 = #{filter.flo2,jdbcType=DOUBLE}
      </if>
    </trim>
  </update>

  <!-- update by criteria -->

  <select id="updateByCriteria">
    ${sql}
  </select>

  <!-- delete by example -->

  <delete id="deleteByExample">
    delete from public.types_numeric
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="int1 != null">
        and int1 = #{int1,jdbcType=SMALLINT}
      </if>
      <if test="int2 != null">
        and int2 = #{int2,jdbcType=INTEGER}
      </if>
      <if test="int3 != null">
        and int3 = #{int3,jdbcType=BIGINT}
      </if>
      <if test="int4 != null">
        and int4 = #{int4,jdbcType=SMALLINT}
      </if>
      <if test="int5 != null">
        and int5 = #{int5,jdbcType=INTEGER}
      </if>
      <if test="int6 != null">
        and int6 = #{int6,jdbcType=BIGINT}
      </if>
      <if test="dec1 != null">
        and dec1 = #{dec1,jdbcType=NUMERIC}
      </if>
      <if test="dec2 != null">
        and dec2 = #{dec2,jdbcType=NUMERIC}
      </if>
      <if test="dec3 != null">
        and dec3 = #{dec3,jdbcType=NUMERIC}
      </if>
      <if test="dec4 != null">
        and dec4 = #{dec4,jdbcType=NUMERIC}
      </if>
      <if test="dec5 != null">
        and dec5 = #{dec5,jdbcType=NUMERIC}
      </if>
      <if test="dec6 != null">
        and dec6 = #{dec6,jdbcType=NUMERIC}
      </if>
      <if test="dec7 != null">
        and dec7 = #{dec7,jdbcType=NUMERIC}
      </if>
      <if test="flo1 != null">
        and flo1 = #{flo1,jdbcType=REAL}
      </if>
      <if test="flo2 != null">
        and flo2 = #{flo2,jdbcType=DOUBLE}
      </if>
    </trim>
  </delete>

  <!-- delete by criteria -->

  <select id="deleteByCriteria">
    ${sql}
  </select>

</mapper>
