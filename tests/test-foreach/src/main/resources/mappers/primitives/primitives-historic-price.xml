<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.historicPrice">

  <!-- columns -->

  <sql id="columns">
    product_id,
    from_date,
    price,
    sku
  </sql>

  <sql id="columnsWithAlias">
    ${alias}.product_id,
    ${alias}.from_date,
    ${alias}.price,
    ${alias}.sku
  </sql>

  <resultMap id="allColumns" type="app.daos.HistoricPriceVO">
    <id property="productId" column="product_id" />
    <id property="fromDate" column="from_date" />
    <result property="price" column="price" />
    <result property="sku" column="sku" />
  </resultMap>

  <!-- select by PK -->

  <select id="selectByPK" resultMap="allColumns">
    select
      <include refid="columns" />
     from public.historic_price
     where
      product_id = #{productId,jdbcType=INTEGER}
      and from_date = #{fromDate,jdbcType=DATE}
  </select>

  <!-- no select by unique indexes since there are no UI (besides the PK) -->

  <!-- select by example -->

  <select id="selectByExample" resultMap="allColumns">
    select
      <include refid="columns" />
     from public.historic_price
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="p.productId != null">
        and product_id = #{p.productId,jdbcType=INTEGER}
      </if>
      <if test="p.fromDate != null">
        and from_date = #{p.fromDate,jdbcType=DATE}
      </if>
      <if test="p.price != null">
        and price = #{p.price,jdbcType=INTEGER}
      </if>
      <if test="p.sku != null">
        and sku = #{p.sku,jdbcType=BIGINT}
      </if>
    </trim>
    <if test="o != null">
      order by ${o}
    </if>
  </select>

  <!-- select by criteria -->

  <select id="selectByCriteria" resultMap="allColumns">
    ${sql}
  </select>

  <!-- insert (no auto-generated columns) -->

  <insert id="insert">
    insert into public.historic_price (
      <trim prefixOverrides=", ">
        <if test="true">, product_id</if>
        <if test="true">, from_date</if>
        <if test="true">, price</if>
        <if test="true">, sku</if>
      </trim>
      ) values (
      <trim prefixOverrides=", ">
        <if test="true">, #{productId,jdbcType=INTEGER}</if>
        <if test="true">, #{fromDate,jdbcType=DATE}</if>
        <if test="true">, #{price,jdbcType=INTEGER}</if>
        <if test="true">, #{sku,jdbcType=BIGINT}</if>
      </trim>
      )
  </insert>

  <!-- update by PK -->

  <update id="updateByPK">
    update public.historic_price set
      price = #{price,jdbcType=INTEGER},
      sku = #{sku,jdbcType=BIGINT}
     where
      product_id = #{productId,jdbcType=INTEGER}
      and from_date = #{fromDate,jdbcType=DATE}
  </update>

  <!-- delete by PK -->

  <delete id="deleteByPK">
    delete from public.historic_price
     where
      product_id = #{productId,jdbcType=INTEGER}
      and from_date = #{fromDate,jdbcType=DATE}
  </delete>

  <!-- update by example -->

  <update id="updateByExample">
    update public.historic_price
    <set>
      <if test="values.productId != null">product_id = #{values.productId,jdbcType=INTEGER},</if>
      <if test="values.fromDate != null">from_date = #{values.fromDate,jdbcType=DATE},</if>
      <if test="values.price != null">price = #{values.price,jdbcType=INTEGER},</if>
      <if test="values.sku != null">sku = #{values.sku,jdbcType=BIGINT},</if>
    </set>
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="filter.productId != null">
        and product_id = #{filter.productId,jdbcType=INTEGER}
      </if>
      <if test="filter.fromDate != null">
        and from_date = #{filter.fromDate,jdbcType=DATE}
      </if>
      <if test="filter.price != null">
        and price = #{filter.price,jdbcType=INTEGER}
      </if>
      <if test="filter.sku != null">
        and sku = #{filter.sku,jdbcType=BIGINT}
      </if>
    </trim>
  </update>

  <!-- update by criteria -->

  <select id="updateByCriteria">
    ${sql}
  </select>

  <!-- delete by example -->

  <delete id="deleteByExample">
    delete from public.historic_price
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="productId != null">
        and product_id = #{productId,jdbcType=INTEGER}
      </if>
      <if test="fromDate != null">
        and from_date = #{fromDate,jdbcType=DATE}
      </if>
      <if test="price != null">
        and price = #{price,jdbcType=INTEGER}
      </if>
      <if test="sku != null">
        and sku = #{sku,jdbcType=BIGINT}
      </if>
    </trim>
  </delete>

  <!-- delete by criteria -->

  <select id="deleteByCriteria">
    ${sql}
  </select>

</mapper>
