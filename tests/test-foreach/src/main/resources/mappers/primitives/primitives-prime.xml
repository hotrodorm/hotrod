<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.prime">

  <!-- columns -->

  <sql id="columns">
    id,
    amount,
    n
  </sql>

  <sql id="columnsWithAlias">
    ${alias}.id,
    ${alias}.amount,
    ${alias}.n
  </sql>

  <resultMap id="allColumns" type="app.daos.PrimeMODEL">
    <id property="id" column="id" />
    <result property="amount" column="amount" typeHandler="app.daos.primitives.PrimeDAO$AmountTypeHandler" />
    <result property="n" column="n" />
  </resultMap>

  <!-- select by PK -->

  <select id="selectByPK" resultMap="allColumns">
    select
      <include refid="columns" />
     from prime
     where
      id = #{id,jdbcType=INTEGER}
  </select>

  <!-- no select by unique indexes since there are no UI (besides the PK) -->

  <!-- select by example -->

  <select id="selectByExample" resultMap="allColumns">
    select
      <include refid="columns" />
     from prime
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="p.id != null">
        and id = #{p.id,jdbcType=INTEGER}
      </if>
      <if test="p.amount != null">
        and amount = #{p.amount,jdbcType=INTEGER,typeHandler=app.daos.primitives.PrimeDAO$AmountTypeHandler}
      </if>
      <if test="p.n != null">
        and n = #{p.n,jdbcType=ARRAY}
      </if>
    </trim>
    <if test="o != null">
      order by ${o}
    </if>
  </select>

  <!-- select by criteria -->

  <select id="selectByCriteria" resultMap="allColumns">
    ${sql}
  </select>

  <!-- insert (no auto-generated columns) -->

  <insert id="insert">
    insert into prime (
      <trim prefixOverrides=", ">
        <if test="true">, id</if>
        <if test="true">, amount</if>
        <if test="true">, n</if>
      </trim>
      ) values (
      <trim prefixOverrides=", ">
        <if test="true">, #{id,jdbcType=INTEGER}</if>
        <if test="true">, #{amount,jdbcType=INTEGER,typeHandler=app.daos.primitives.PrimeDAO$AmountTypeHandler}</if>
        <if test="true">, #{n,jdbcType=ARRAY}</if>
      </trim>
      )
  </insert>

  <!-- update by PK -->

  <update id="updateByPK">
    update prime set
      amount = #{amount,jdbcType=INTEGER,typeHandler=app.daos.primitives.PrimeDAO$AmountTypeHandler},
      n = #{n,jdbcType=ARRAY}
     where
      id = #{id,jdbcType=INTEGER}
  </update>

  <!-- delete by PK -->

  <delete id="deleteByPK">
    delete from prime
     where
      id = #{id,jdbcType=INTEGER}
  </delete>

  <!-- update by example -->

  <update id="updateByExample">
    update prime
    <set>
      <if test="values.id != null">id = #{values.id,jdbcType=INTEGER},</if>
      <if test="values.amount != null">amount = #{values.amount,jdbcType=INTEGER,typeHandler=app.daos.primitives.PrimeDAO$AmountTypeHandler},</if>
      <if test="values.n != null">n = #{values.n,jdbcType=ARRAY},</if>
    </set>
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="filter.id != null">
        and id = #{filter.id,jdbcType=INTEGER}
      </if>
      <if test="filter.amount != null">
        and amount = #{filter.amount,jdbcType=INTEGER,typeHandler=app.daos.primitives.PrimeDAO$AmountTypeHandler}
      </if>
      <if test="filter.n != null">
        and n = #{filter.n,jdbcType=ARRAY}
      </if>
    </trim>
  </update>

  <!-- delete by example -->

  <delete id="deleteByExample">
    delete from prime
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="id != null">
        and id = #{id,jdbcType=INTEGER}
      </if>
      <if test="amount != null">
        and amount = #{amount,jdbcType=INTEGER,typeHandler=app.daos.primitives.PrimeDAO$AmountTypeHandler}
      </if>
      <if test="n != null">
        and n = #{n,jdbcType=ARRAY}
      </if>
    </trim>
  </delete>

</mapper>
