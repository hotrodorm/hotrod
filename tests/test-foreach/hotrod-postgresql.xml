<?xml version="1.0"?>
<!DOCTYPE hotrod SYSTEM "hotrod.dtd">

<hotrod>

  <generators>
    <mybatis-spring>

<!-- 
      <discover>
        <current-schema>
          <exclude name="employee" />
        </current-schema>
        <schema name="schema2">
          <exclude name="prices" />
        </schema>
        <schema name="schema3">
          <exclude name="code" />
        </schema>
      </discover>
-->

      <daos package="app.daos" dao-suffix="DAO" vo-suffix="MODEL" abstract-vo-prefix=""
        abstract-vo-suffix="VO" />
      <mappers dir="mappers" />
<!--
      <classic-fk-navigation />
      <select-generation strategy="result-set" />
-->
    </mybatis-spring>
  </generators>

  <converter name="array_converter"
    java-type="java.lang.Integer[]"
    java-intermediate-type="java.sql.Array"
    class="app.converters.ArrayConverter"
  />

  <converter name="double_converter"
    java-type="java.lang.Double"
    java-intermediate-type="java.lang.Double"
    class="app.converters.DoubleConverter"
  />

<!-- 
      <column name="nums" converter="array_converter" jdbc-type="ARRAY" />

 -->
  <dao name="Queries2">
    <select method="findNumbers" vo="Num">
      <column name="total" converter="double_converter" jdbc-type="NUMERIC" />
      <column name="nmbs" converter="array_converter" jdbc-type="ARRAY" />
      select sum(n) as total,
             array_agg(1+2*n) as nmbs
      from generate_series(1, 5) x(n);
    </select>
  </dao>

  <table name="prime" >
    <column name="amount" converter="double_converter" />
  <!-- 
     -->
  </table>

<!--
  <table name="branch" />


  <dao name="Queries">
    <select method="findEmployees" vo="E">
      <parameter name="ids" java-type="java.util.List&lt;Integer>" jdbc-type="NUMERIC" />
      <parameter name="names" java-type="java.util.List&lt;String>" jdbc-type="VARCHAR" />
      select *
      from employee
      <complement>
        where branch_id in
        <foreach item="id" collection="ids" open="(" separator=", " close=")">
          ${id}
        </foreach>
        or name in
        <foreach item="name" collection="names" open="(" separator=", " close=")">
          '${name}'
        </foreach>
      </complement>
    </select>
  </dao>
-->

</hotrod>
