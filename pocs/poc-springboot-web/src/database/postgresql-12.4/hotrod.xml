<?xml version="1.0"?>
<!DOCTYPE hotrod SYSTEM "hotrod.dtd">

<hotrod>

  <generators>
    <mybatis-spring>
      <daos package="app5.persistence" 
        dao-prefix=""  dao-suffix="DAO" vo-prefix=""  vo-suffix="VO" abstract-vo-prefix="Abstract"  abstract-vo-suffix="VO" 
        ndao-prefix="" ndao-suffix=""   nvo-prefix="" nvo-suffix=""  nabstract-vo-prefix="Abstract" nabstract-vo-suffix="" 
      />
      
      <!--
      <classes basedir="" package="" />
        <dao package="" prefix="" suffix="" nitro-prefix="" nitro-suffix="" />
        <vo package="" prefix="" suffix="" nitro-prefix="" nitro-suffix="" />
        <abstract-vo package="" prefix="" suffix="" nitro-prefix="" nitro-suffix="" />
      </classes>
      <mapper basedir="" dir="" />
       -->
<!-- 
        ndao-prefix="" ndao-suffix="" nvo-prefix="" nvo-suffix="" nabstract-vo-prefix="Abstract" nabstract-vo-suffix="" 


                  DAO             VO              Abstract VO
                  prefix  suffix  prefix  suffix  prefix      suffix

 <table>, <view>  ""      "DAO"   ""      "VO"    "Abstract"  "VO"
 <dao>            ""      "DAO"  
 <select> VO                      ""      "VO"    "Abstract"  "VO"

-->     
      
<!--

      <nitro dao-prefix="" dao-suffix="DAO" vo-prefix="" vo-suffix="VO" abstract-vo-prefix="Abstract" abstract-vo-suffix="VO" /> 
    
      <java base-dir="" package="" primitives-package="">
        <entity-dao prefix="" suffix="" />
        <entity-vo prefix="" suffix="" abstract-prefix="" abstract-suffix="" />
        <dao prefix="" suffix="" />
        <select-vo prefix="" suffix="" abstract-prefix="" abstract-suffix="" />
      </java>
      
      <java base-dir="" package="" primitives-package="">
        <entity-dao prefix="" suffix="" />
        <entity-vo prefix="" suffix="" />
        <abstract-entity-vo prefix="" suffix="" />
        <dao prefix="" suffix="" />
        <select-vo prefix="" suffix="" />
        <abstract-select-vo prefix="" suffix="" />
      </java>
-->

      <mappers dir="mappers" />
      <classic-fk-navigation />
      <!-- 
       -->
      <select-generation strategy="result-set" />
      <!-- 
      <select-generation strategy="create-view" />
      <select-generation strategy="result-set" />
       -->
    </mybatis-spring>
  </generators>

  <name-solver>
    <name value="^PTY_(.+)$" replace="$1" scope="table, column" />
    <name value="^PER_(.+)$" replace="$1" scope="column" />
  <!-- 
    <name value="^(.+)_id$" replace="$1" scope="column" />
 -->    
  </name-solver>

<!-- 
  <name-solver>
    <name value="^sk(.+)$" replace="prop2$1" scope="column" />
    <name value="^CLI_(.+)$" replace="$1" scope="column" />
    <name value="^(.+)_TBL$" replace="$1" scope="table, view " />
    <name value="^(.+)_tbl$" replace="$1" scope="table, view " />
    <name value="^\w{3,3}_(\w+)_CLI$" replace="$1" scope="table, column" />
    <name value="^CLI_(\w.+)_(\w+)_\w{2,3}$" replace="$1$2" scope="table , column , view" />
  </name-solver>
 -->

 
  <type-solver>
  <!-- 
    <when test="name == 'price'" java-type="java.lang.Double" />
     -->
  </type-solver>

  <table name="product" />
  <table name="historic_price" />
  <!-- 
   -->

  <table name="client" />
  <view name="active_client" />

  <table name="account" />
  <table name="item" />
  <table name="island" />
  <table name="transaction" />
  <table name="federal_branch" />
  <table name="types_binary" />
  <table name="types_other" />

<!-- 
 -->
  <fragment file="accounts-fragment.xml" />
 
  <dao name="MyQueriesDAO">
  
    <sequence method="nextHouse" name="seq_house" /> 

    <!-- For new "result-set" strategy
    -->
    <select method="findExpensiveProducts" vo="ExpensiveProductVO" mode="cursor">
      <parameter name="minPrice" java-type="Integer" jdbc-type="NUMERIC" />
      <parameter name="when" java-type="String" />
      select name, price, #{when} as kind
      from product
      where price > #{minPrice}
    </select>

    <!-- For old "create-view" strategy 
    <select method="findExpensiveProducts" vo="CheapProductVO" mode="cursor">
      <parameter name="minPrice" java-type="Integer" jdbc-type="NUMERIC" />
      <parameter name="when" java-type="String" />
      select name, price, 1 as kind
      from product
      <complement>
      where price > #{minPrice}
      </complement>
    </select>
    -->

    <select method="findCheapestProducts">
      select
      <columns>
        <vo table="product" alias="p" />
      </columns>
      from product p
      where p.price between 0 and 3
    </select>


<!-- 

    <select method="findProductsWithPrices">
      select
      <columns>
        <vo table="product" extended-vo="ProductWithPrices" alias="p">
          <collection table="historic_price" property="prices" extended-vo="HPriceWithScore"  alias="h" >
            <expression property="score">1</expression>
          </collection>
        </vo>
      </columns>
      from product p
      join historic_price h on h.product_id = p.id
      where p.price between 0 and 10
    </select>
 -->
 
  </dao>

</hotrod>
