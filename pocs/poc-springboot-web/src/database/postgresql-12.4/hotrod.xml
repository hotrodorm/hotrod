<?xml version="1.0"?>
<!DOCTYPE hotrod SYSTEM "hotrod.dtd">

<hotrod>

  <generators>
    <mybatis-spring>
      <daos package="app5.persistence" 
        vo-prefix=""                vo-suffix="VO" 
        abstract-vo-prefix="Abstract" abstract-vo-suffix="VO" 
        dao-prefix="" dao-suffix="DAO" 
      />
      <mappers dir="mappers" />
      <classic-fk-navigation />
      <select-generation strategy="result-set" />
      <!-- 
      <select-generation strategy="create-view" />
      <select-generation strategy="result-set" />
       -->
    </mybatis-spring>
  </generators>

  <name-solver>
    <name value="^PTY_(.+)$" replace="$1" scope="table, column" />
    <name value="^PER_(.+)$" replace="$1" scope="column" />
  </name-solver>

<!-- 
  <name-solver>
    <name value="^sk(.+)$" replace="prop2$1" scope="column" />
    <name value="^CLI_(.+)$" replace="$1" scope="column" />
    <name value="^(.+)_TBL$" replace="$1" scope="table, view " />
    <name value="^(.+)_tbl$" replace="$1" scope="table, view " />
    <name value="^\w{3,3}_(\w+)_CLI$" replace="$1" scope="table, column" />
    <name value="^CLI_(\w.+)_(\w+)_\w{2,3}$" replace="$1$2" scope="table , column , view" />
  </name-solver>
 -->
 
  <type-solver>
  <!-- 
    <when test="name == 'price'" java-type="java.lang.Double" />
     -->
  </type-solver>

  <table name="product" />
  <table name="historic_price" />
  
  <table name="account" />
  <table name="item" />
  <table name="island" />
  <table name="transaction" />
  <table name="federal_branch" />
  <table name="types_binary" />
  <table name="types_other" />

  <dao name="MyQueries">

    <!-- For new "result-set" strategy
    -->
    <select method="findExpensiveProducts" vo="CheapProduct" mode="cursor">
      <parameter name="minPrice" java-type="Integer" jdbc-type="NUMERIC" />
      <parameter name="when" java-type="String" />
      select name, price, #{when} as kind
      from product
      where price > #{minPrice}
    </select>

    <!-- For old "create-view" strategy 
    <select method="findExpensiveProducts" vo="CheapProductVO" mode="cursor">
      <parameter name="minPrice" java-type="Integer" jdbc-type="NUMERIC" />
      <parameter name="when" java-type="String" />
      select name, price, 1 as kind
      from product
      <complement>
      where price > #{minPrice}
      </complement>
    </select>
    -->

    <select method="findProductsWithPrices">
      select
      <columns>
        <vo table="product" extended-vo="ProductWithPrices" alias="p">
          <collection table="historic_price" property="prices" alias="h" />
        </vo>
      </columns>
      from product p
      join historic_price h on h.product_id = p.id
      where p.price between 0 and 10
    </select>


    <select method="findCheapestProducts">
      select
      <columns>
        <vo table="product" alias="p" />
      </columns>
      from product p
      where p.price between 0 and 3
    </select>

  </dao>

</hotrod>
