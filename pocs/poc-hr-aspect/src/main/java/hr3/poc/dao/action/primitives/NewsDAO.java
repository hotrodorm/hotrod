// Autogenerated by HotRod -- Do not edit.

package hr3.poc.dao.action.primitives;

import java.io.Serializable;
import java.util.List;

import org.apache.ibatis.session.SqlSession;

import org.hotrod.runtime.interfaces.DaoWithOrder;
import org.hotrod.runtime.interfaces.UpdateByExampleDao;
import org.hotrod.runtime.interfaces.OrderBy;

import hr3.poc.dao.action.NewsImpl;
import hr3.poc.dao.action.ActionImpl;
import hr3.poc.dao.action.primitives.ActionDAO;

import org.hotrod.runtime.livesql.expressions.ResultSetColumn;
import org.hotrod.runtime.livesql.dialects.SQLDialect;
import org.hotrod.runtime.livesql.metadata.NumberColumn;
import org.hotrod.runtime.livesql.metadata.StringColumn;
import org.hotrod.runtime.livesql.metadata.DateTimeColumn;
import org.hotrod.runtime.livesql.metadata.BooleanColumn;
import org.hotrod.runtime.livesql.metadata.ByteArrayColumn;
import org.hotrod.runtime.livesql.metadata.ObjectColumn;
import org.hotrod.runtime.livesql.metadata.Table;
import org.hotrod.runtime.livesql.expressions.predicates.Predicate;
import org.hotrod.runtime.livesql.queries.select.CriteriaWherePhase;
import org.hotrod.runtime.livesql.metadata.View;

import org.springframework.stereotype.Component;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;

@Component("newsDAO")
public class NewsDAO implements Serializable, ApplicationContextAware {

  private static final long serialVersionUID = 1L;

  @Autowired
  private SqlSession sqlSession;

  @Value("#{sqlDialectFactory.sqlDialect}")
  private SQLDialect sqlDialect;

  private ApplicationContext applicationContext;

  @Override
  public void setApplicationContext(final ApplicationContext applicationContext) throws BeansException {
    this.applicationContext = applicationContext;
  }

  // select by primary key

  public hr3.poc.dao.action.NewsImpl selectByPK(final java.lang.Long actionId) {
    if (actionId == null)
      return null;
    hr3.poc.dao.action.NewsImpl vo = new hr3.poc.dao.action.NewsImpl();
    vo.setActionId(actionId);
    return this.sqlSession.selectOne("hr3.poc.dao.action.primitives.news.selectByPK", vo);
  }

  // select by unique indexes: no unique indexes found (besides the PK) -- skipped

  // select by example

  public List<hr3.poc.dao.action.NewsImpl> selectByExample(final hr3.poc.dao.action.NewsImpl example, final NewsOrderBy... orderBies)
      {
    DaoWithOrder<hr3.poc.dao.action.NewsImpl, NewsOrderBy> dwo = //
        new DaoWithOrder<hr3.poc.dao.action.NewsImpl, NewsOrderBy>(example, orderBies);
    return this.sqlSession.selectList("hr3.poc.dao.action.primitives.news.selectByExample", dwo);
  }

  // select by criteria

  public CriteriaWherePhase<hr3.poc.dao.action.NewsImpl> selectByCriteria(final NewsDAO.NewsTable from,
      final Predicate predicate) {
    return new CriteriaWherePhase<hr3.poc.dao.action.NewsImpl>(from, this.sqlDialect, this.sqlSession,
        predicate, "hr3.poc.dao.action.primitives.news.selectByCriteria");
  }

  // insert

  public int insert(final hr3.poc.dao.action.NewsImpl vo) {
    String id = "hr3.poc.dao.action.primitives.news.insert";
    return this.sqlSession.insert(id, vo);
  }

  // update by PK

  public int update(final hr3.poc.dao.action.NewsImpl vo) {
    if (vo.actionId == null) return 0;
    return this.sqlSession.update("hr3.poc.dao.action.primitives.news.updateByPK", vo);
  }

  // delete by PK

  public int delete(final hr3.poc.dao.action.NewsImpl vo) {
    if (vo.actionId == null) return 0;
    return this.sqlSession.delete("hr3.poc.dao.action.primitives.news.deleteByPK", vo);
  }

  // update by example

  public int updateByExample(final hr3.poc.dao.action.NewsImpl example, final hr3.poc.dao.action.NewsImpl updateValues) {
    UpdateByExampleDao<hr3.poc.dao.action.NewsImpl> fvd = //
      new UpdateByExampleDao<hr3.poc.dao.action.NewsImpl>(example, updateValues);
    return this.sqlSession.update("hr3.poc.dao.action.primitives.news.updateByExample", fvd);
  }

  // delete by example

  public int deleteByExample(final hr3.poc.dao.action.NewsImpl example) {
    return this.sqlSession.delete("hr3.poc.dao.action.primitives.news.deleteByExample", example);
  }

  // DAO ordering

  public enum NewsOrderBy implements OrderBy {

    ACTION_ID("kzo_news", "action_id", true), //
    ACTION_ID$DESC("kzo_news", "action_id", false), //
    NEWS_CONTENT("kzo_news", "news_description", true), //
    NEWS_CONTENT$DESC("kzo_news", "news_description", false), //
    NEWS_CONTENT$CASEINSENSITIVE("kzo_news", "lower(news_description)", true), //
    NEWS_CONTENT$CASEINSENSITIVE_STABLE_FORWARD("kzo_news", "lower(news_description), news_description", true), //
    NEWS_CONTENT$CASEINSENSITIVE_STABLE_REVERSE("kzo_news", "lower(news_description), news_description", false), //
    NEWS_CONTENT$DESC_CASEINSENSITIVE("kzo_news", "lower(news_description)", false), //
    NEWS_CONTENT$DESC_CASEINSENSITIVE_STABLE_FORWARD("kzo_news", "lower(news_description), news_description", false), //
    NEWS_CONTENT$DESC_CASEINSENSITIVE_STABLE_REVERSE("kzo_news", "lower(news_description), news_description", true), //
    NEWS_METADATA("kzo_news", "news_metadata", true), //
    NEWS_METADATA$DESC("kzo_news", "news_metadata", false), //
    NEWS_METADATA$CASEINSENSITIVE("kzo_news", "lower(news_metadata)", true), //
    NEWS_METADATA$CASEINSENSITIVE_STABLE_FORWARD("kzo_news", "lower(news_metadata), news_metadata", true), //
    NEWS_METADATA$CASEINSENSITIVE_STABLE_REVERSE("kzo_news", "lower(news_metadata), news_metadata", false), //
    NEWS_METADATA$DESC_CASEINSENSITIVE("kzo_news", "lower(news_metadata)", false), //
    NEWS_METADATA$DESC_CASEINSENSITIVE_STABLE_FORWARD("kzo_news", "lower(news_metadata), news_metadata", false), //
    NEWS_METADATA$DESC_CASEINSENSITIVE_STABLE_REVERSE("kzo_news", "lower(news_metadata), news_metadata", true);

    private NewsOrderBy(final String tableName, final String columnName,
        boolean ascending) {
      this.tableName = tableName;
      this.columnName = columnName;
      this.ascending = ascending;
    }

    private String tableName;
    private String columnName;
    private boolean ascending;

    public String getTableName() {
      return this.tableName;
    }

    public String getColumnName() {
      return this.columnName;
    }

    public boolean isAscending() {
      return this.ascending;
    }

  }

  // Database Table metadata

  public static NewsTable newTable() {
    return new NewsTable();
  }

  public static NewsTable newTable(final String alias) {
    return new NewsTable(alias);
  }

  public static class NewsTable extends Table {

    // Properties

    public NumberColumn actionId;
    public StringColumn newsContent;
    public StringColumn newsMetadata;

    // Constructors

    NewsTable() {
      super(null, null, "KZO_NEWS", "Table", null);
      initialize();
    }

    NewsTable(final String alias) {
      super(null, null, "KZO_NEWS", "Table", alias);
      initialize();
    }

    // Initialization

    private void initialize() {
      this.actionId = new NumberColumn(this, "ACTION_ID", "actionId");
      this.newsContent = new StringColumn(this, "NEWS_DESCRIPTION", "newsContent");
      this.newsMetadata = new StringColumn(this, "NEWS_METADATA", "newsMetadata");
    }

  }

}
