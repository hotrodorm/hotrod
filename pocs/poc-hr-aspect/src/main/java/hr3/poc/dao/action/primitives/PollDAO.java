// Autogenerated by HotRod -- Do not edit.

package hr3.poc.dao.action.primitives;

import java.io.Serializable;
import java.util.List;

import org.apache.ibatis.session.SqlSession;

import org.hotrod.runtime.interfaces.DaoWithOrder;
import org.hotrod.runtime.interfaces.UpdateByExampleDao;
import org.hotrod.runtime.interfaces.OrderBy;

import hr3.poc.dao.action.PollImpl;
import hr3.poc.dao.action.ActionImpl;
import hr3.poc.dao.action.primitives.ActionDAO;

import org.hotrod.runtime.livesql.expressions.ResultSetColumn;
import org.hotrod.runtime.livesql.dialects.SQLDialect;
import org.hotrod.runtime.livesql.metadata.NumberColumn;
import org.hotrod.runtime.livesql.metadata.StringColumn;
import org.hotrod.runtime.livesql.metadata.DateTimeColumn;
import org.hotrod.runtime.livesql.metadata.BooleanColumn;
import org.hotrod.runtime.livesql.metadata.ByteArrayColumn;
import org.hotrod.runtime.livesql.metadata.ObjectColumn;
import org.hotrod.runtime.livesql.metadata.Table;
import org.hotrod.runtime.livesql.expressions.predicates.Predicate;
import org.hotrod.runtime.livesql.queries.select.CriteriaWherePhase;
import org.hotrod.runtime.livesql.metadata.View;

import org.springframework.stereotype.Component;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;

@Component("pollDAO")
public class PollDAO implements Serializable, ApplicationContextAware {

  private static final long serialVersionUID = 1L;

  @Autowired
  private SqlSession sqlSession;

  @Value("#{sqlDialectFactory.sqlDialect}")
  private SQLDialect sqlDialect;

  private ApplicationContext applicationContext;

  @Override
  public void setApplicationContext(final ApplicationContext applicationContext) throws BeansException {
    this.applicationContext = applicationContext;
  }

  // select by primary key

  public hr3.poc.dao.action.PollImpl selectByPK(final java.lang.Long pollId) {
    if (pollId == null)
      return null;
    hr3.poc.dao.action.PollImpl vo = new hr3.poc.dao.action.PollImpl();
    vo.setPollId(pollId);
    return this.sqlSession.selectOne("hr3.poc.dao.action.primitives.poll.selectByPK", vo);
  }

  // select by unique indexes: no unique indexes found (besides the PK) -- skipped

  // select by example

  public List<hr3.poc.dao.action.PollImpl> selectByExample(final hr3.poc.dao.action.PollImpl example, final PollOrderBy... orderBies)
      {
    DaoWithOrder<hr3.poc.dao.action.PollImpl, PollOrderBy> dwo = //
        new DaoWithOrder<hr3.poc.dao.action.PollImpl, PollOrderBy>(example, orderBies);
    return this.sqlSession.selectList("hr3.poc.dao.action.primitives.poll.selectByExample", dwo);
  }

  // select by criteria

  public CriteriaWherePhase<hr3.poc.dao.action.PollImpl> selectByCriteria(final PollDAO.PollTable from,
      final Predicate predicate) {
    return new CriteriaWherePhase<hr3.poc.dao.action.PollImpl>(from, this.sqlDialect, this.sqlSession,
        predicate, "hr3.poc.dao.action.primitives.poll.selectByCriteria");
  }

  // insert

  public int insert(final hr3.poc.dao.action.PollImpl vo) {
    String id = "hr3.poc.dao.action.primitives.poll.insert";
    return this.sqlSession.insert(id, vo);
  }

  // update by PK

  public int update(final hr3.poc.dao.action.PollImpl vo) {
    if (vo.pollId == null) return 0;
    return this.sqlSession.update("hr3.poc.dao.action.primitives.poll.updateByPK", vo);
  }

  // delete by PK

  public int delete(final hr3.poc.dao.action.PollImpl vo) {
    if (vo.pollId == null) return 0;
    return this.sqlSession.delete("hr3.poc.dao.action.primitives.poll.deleteByPK", vo);
  }

  // update by example

  public int updateByExample(final hr3.poc.dao.action.PollImpl example, final hr3.poc.dao.action.PollImpl updateValues) {
    UpdateByExampleDao<hr3.poc.dao.action.PollImpl> fvd = //
      new UpdateByExampleDao<hr3.poc.dao.action.PollImpl>(example, updateValues);
    return this.sqlSession.update("hr3.poc.dao.action.primitives.poll.updateByExample", fvd);
  }

  // delete by example

  public int deleteByExample(final hr3.poc.dao.action.PollImpl example) {
    return this.sqlSession.delete("hr3.poc.dao.action.primitives.poll.deleteByExample", example);
  }

  // DAO ordering

  public enum PollOrderBy implements OrderBy {

    POLL_ID("kzo_poll", "action_id", true), //
    POLL_ID$DESC("kzo_poll", "action_id", false), //
    POLL_DESCRIPTION("kzo_poll", "poll_description", true), //
    POLL_DESCRIPTION$DESC("kzo_poll", "poll_description", false), //
    POLL_DESCRIPTION$CASEINSENSITIVE("kzo_poll", "lower(poll_description)", true), //
    POLL_DESCRIPTION$CASEINSENSITIVE_STABLE_FORWARD("kzo_poll", "lower(poll_description), poll_description", true), //
    POLL_DESCRIPTION$CASEINSENSITIVE_STABLE_REVERSE("kzo_poll", "lower(poll_description), poll_description", false), //
    POLL_DESCRIPTION$DESC_CASEINSENSITIVE("kzo_poll", "lower(poll_description)", false), //
    POLL_DESCRIPTION$DESC_CASEINSENSITIVE_STABLE_FORWARD("kzo_poll", "lower(poll_description), poll_description", false), //
    POLL_DESCRIPTION$DESC_CASEINSENSITIVE_STABLE_REVERSE("kzo_poll", "lower(poll_description), poll_description", true), //
    POLL_METADATA("kzo_poll", "poll_metadata", true), //
    POLL_METADATA$DESC("kzo_poll", "poll_metadata", false), //
    POLL_METADATA$CASEINSENSITIVE("kzo_poll", "lower(poll_metadata)", true), //
    POLL_METADATA$CASEINSENSITIVE_STABLE_FORWARD("kzo_poll", "lower(poll_metadata), poll_metadata", true), //
    POLL_METADATA$CASEINSENSITIVE_STABLE_REVERSE("kzo_poll", "lower(poll_metadata), poll_metadata", false), //
    POLL_METADATA$DESC_CASEINSENSITIVE("kzo_poll", "lower(poll_metadata)", false), //
    POLL_METADATA$DESC_CASEINSENSITIVE_STABLE_FORWARD("kzo_poll", "lower(poll_metadata), poll_metadata", false), //
    POLL_METADATA$DESC_CASEINSENSITIVE_STABLE_REVERSE("kzo_poll", "lower(poll_metadata), poll_metadata", true);

    private PollOrderBy(final String tableName, final String columnName,
        boolean ascending) {
      this.tableName = tableName;
      this.columnName = columnName;
      this.ascending = ascending;
    }

    private String tableName;
    private String columnName;
    private boolean ascending;

    public String getTableName() {
      return this.tableName;
    }

    public String getColumnName() {
      return this.columnName;
    }

    public boolean isAscending() {
      return this.ascending;
    }

  }

  // Database Table metadata

  public static PollTable newTable() {
    return new PollTable();
  }

  public static PollTable newTable(final String alias) {
    return new PollTable(alias);
  }

  public static class PollTable extends Table {

    // Properties

    public NumberColumn pollId;
    public StringColumn pollDescription;
    public StringColumn pollMetadata;

    // Constructors

    PollTable() {
      super(null, null, "KZO_POLL", "Table", null);
      initialize();
    }

    PollTable(final String alias) {
      super(null, null, "KZO_POLL", "Table", alias);
      initialize();
    }

    // Initialization

    private void initialize() {
      this.pollId = new NumberColumn(this, "ACTION_ID", "pollId");
      this.pollDescription = new StringColumn(this, "POLL_DESCRIPTION", "pollDescription");
      this.pollMetadata = new StringColumn(this, "POLL_METADATA", "pollMetadata");
    }

  }

}
