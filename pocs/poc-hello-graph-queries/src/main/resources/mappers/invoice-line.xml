<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.invoiceLine">

  <!-- columns -->

  <sql id="columns">
    invoice_id,
    product_id,
    qty
  </sql>

  <sql id="columnsWithAlias">
    ${alias}.invoice_id,
    ${alias}.product_id,
    ${alias}.qty
  </sql>

  <resultMap id="allColumns" type="app.daos.InvoiceLineVO">
    <result property="invoiceId" column="INVOICE_ID" />
    <result property="productId" column="PRODUCT_ID" />
    <result property="qty" column="QTY" />
  </resultMap>

  <!-- select by PK: no mapping generated, since the table does not have a PK -->

  <!-- select by unique indexes: no mappings generated, since the table does not have UIs -->

  <!-- select by example -->

  <select id="selectByExample" resultMap="allColumns">
    select
      <include refid="columns" />
     from invoice_line
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="p.invoiceId != null">
        and invoice_id = #{p.invoiceId,jdbcType=INTEGER}
      </if>
      <if test="p.productId != null">
        and product_id = #{p.productId,jdbcType=INTEGER}
      </if>
      <if test="p.qty != null">
        and qty = #{p.qty,jdbcType=INTEGER}
      </if>
    </trim>
    <if test="o != null">
      order by ${o}
    </if>
  </select>

  <!-- select by criteria -->

  <select id="selectByCriteria" resultMap="allColumns">
    ${sql}
  </select>

  <!-- insert (no auto-generated columns) -->

  <insert id="insert">
    insert into invoice_line (
      <trim prefixOverrides=", ">
        <if test="true">, invoice_id</if>
        <if test="true">, product_id</if>
        <if test="true">, qty</if>
      </trim>
      ) values (
      <trim prefixOverrides=", ">
        <if test="true">, #{invoiceId,jdbcType=INTEGER}</if>
        <if test="true">, #{productId,jdbcType=INTEGER}</if>
        <if test="true">, #{qty,jdbcType=INTEGER}</if>
      </trim>
      )
  </insert>

  <!-- update by PK: no update mapping generated, since the table does not have a PK -->

  <!-- delete by PK: no delete mapping generated, since the table does not have a PK -->

  <!-- update by example -->

  <update id="updateByExample">
    update invoice_line
    <set>
      <if test="values.invoiceId != null">invoice_id = #{values.invoiceId,jdbcType=INTEGER},</if>
      <if test="values.productId != null">product_id = #{values.productId,jdbcType=INTEGER},</if>
      <if test="values.qty != null">qty = #{values.qty,jdbcType=INTEGER},</if>
    </set>
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="filter.invoiceId != null">
        and invoice_id = #{filter.invoiceId,jdbcType=INTEGER}
      </if>
      <if test="filter.productId != null">
        and product_id = #{filter.productId,jdbcType=INTEGER}
      </if>
      <if test="filter.qty != null">
        and qty = #{filter.qty,jdbcType=INTEGER}
      </if>
    </trim>
  </update>

  <!-- update by criteria -->

  <select id="updateByCriteria">
    ${sql}
  </select>

  <!-- delete by example -->

  <delete id="deleteByExample">
    delete from invoice_line
    <trim prefix="where&#xA;" prefixOverrides="and |or ">
      <if test="invoiceId != null">
        and invoice_id = #{invoiceId,jdbcType=INTEGER}
      </if>
      <if test="productId != null">
        and product_id = #{productId,jdbcType=INTEGER}
      </if>
      <if test="qty != null">
        and qty = #{qty,jdbcType=INTEGER}
      </if>
    </trim>
  </delete>

  <!-- delete by criteria -->

  <select id="deleteByCriteria">
    ${sql}
  </select>

</mapper>
