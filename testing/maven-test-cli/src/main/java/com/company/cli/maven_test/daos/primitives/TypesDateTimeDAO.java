// Autogenerated by HotRod -- Do not edit.

package com.company.cli.maven_test.daos.primitives;

import java.io.Serializable;
import java.util.List;

import org.apache.ibatis.session.SqlSession;

import org.hotrod.runtime.interfaces.DaoWithOrder;
import org.hotrod.runtime.interfaces.UpdateByExampleDao;
import org.hotrod.runtime.interfaces.OrderBy;

import com.company.cli.maven_test.daos.TypesDateTimeVO;

import org.hotrod.runtime.livesql.expressions.ResultSetColumn;
import org.hotrod.runtime.livesql.dialects.SQLDialect;
import org.hotrod.runtime.livesql.metadata.NumberColumn;
import org.hotrod.runtime.livesql.metadata.StringColumn;
import org.hotrod.runtime.livesql.metadata.DateTimeColumn;
import org.hotrod.runtime.livesql.metadata.BooleanColumn;
import org.hotrod.runtime.livesql.metadata.ByteArrayColumn;
import org.hotrod.runtime.livesql.metadata.ObjectColumn;
import org.hotrod.runtime.livesql.metadata.Table;
import org.hotrod.runtime.livesql.expressions.predicates.Predicate;
import org.hotrod.runtime.livesql.queries.select.CriteriaWherePhase;
import org.hotrod.runtime.livesql.metadata.View;

import org.springframework.stereotype.Component;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;

@Component("typesDateTimeDAO")
public class TypesDateTimeDAO implements Serializable, ApplicationContextAware {

  private static final long serialVersionUID = 1L;

  @Autowired
  private SqlSession sqlSession;

  @Value("#{sqlDialectFactory.sqlDialect}")
  private SQLDialect sqlDialect;

  private ApplicationContext applicationContext;

  @Override
  public void setApplicationContext(final ApplicationContext applicationContext) throws BeansException {
    this.applicationContext = applicationContext;
  }

  // select by primary key

  public com.company.cli.maven_test.daos.TypesDateTimeVO selectByPK(final java.lang.Integer id) {
    if (id == null)
      return null;
    com.company.cli.maven_test.daos.TypesDateTimeVO vo = new com.company.cli.maven_test.daos.TypesDateTimeVO();
    vo.setId(id);
    return this.sqlSession.selectOne("com.company.cli.maven_test.daos.primitives.typesDateTime.selectByPK", vo);
  }

  // select by unique indexes: no unique indexes found (besides the PK) -- skipped

  // select by example

  public List<com.company.cli.maven_test.daos.TypesDateTimeVO> selectByExample(final com.company.cli.maven_test.daos.TypesDateTimeVO example, final TypesDateTimeOrderBy... orderBies)
      {
    DaoWithOrder<com.company.cli.maven_test.daos.TypesDateTimeVO, TypesDateTimeOrderBy> dwo = //
        new DaoWithOrder<com.company.cli.maven_test.daos.TypesDateTimeVO, TypesDateTimeOrderBy>(example, orderBies);
    return this.sqlSession.selectList("com.company.cli.maven_test.daos.primitives.typesDateTime.selectByExample", dwo);
  }

  // select by criteria

  public CriteriaWherePhase<com.company.cli.maven_test.daos.TypesDateTimeVO> selectByCriteria(final TypesDateTimeDAO.TypesDateTimeTable from,
      final Predicate predicate) {
    return new CriteriaWherePhase<com.company.cli.maven_test.daos.TypesDateTimeVO>(from, this.sqlDialect, this.sqlSession,
        predicate, "com.company.cli.maven_test.daos.primitives.typesDateTime.selectByCriteria");
  }

  // insert

  public int insert(final com.company.cli.maven_test.daos.TypesDateTimeVO vo) {
    String id = "com.company.cli.maven_test.daos.primitives.typesDateTime.insert";
    return this.sqlSession.insert(id, vo);
  }

  // update by PK

  public int update(final com.company.cli.maven_test.daos.TypesDateTimeVO vo) {
    if (vo.id == null) return 0;
    return this.sqlSession.update("com.company.cli.maven_test.daos.primitives.typesDateTime.updateByPK", vo);
  }

  // delete by PK

  public int delete(final com.company.cli.maven_test.daos.TypesDateTimeVO vo) {
    if (vo.id == null) return 0;
    return this.sqlSession.delete("com.company.cli.maven_test.daos.primitives.typesDateTime.deleteByPK", vo);
  }

  // update by example

  public int updateByExample(final com.company.cli.maven_test.daos.TypesDateTimeVO example, final com.company.cli.maven_test.daos.TypesDateTimeVO updateValues) {
    UpdateByExampleDao<com.company.cli.maven_test.daos.TypesDateTimeVO> fvd = //
      new UpdateByExampleDao<com.company.cli.maven_test.daos.TypesDateTimeVO>(example, updateValues);
    return this.sqlSession.update("com.company.cli.maven_test.daos.primitives.typesDateTime.updateByExample", fvd);
  }

  // delete by example

  public int deleteByExample(final com.company.cli.maven_test.daos.TypesDateTimeVO example) {
    return this.sqlSession.delete("com.company.cli.maven_test.daos.primitives.typesDateTime.deleteByExample", example);
  }

  // DAO ordering

  public enum TypesDateTimeOrderBy implements OrderBy {

    ID("types_date_time", "id", true), //
    ID$DESC("types_date_time", "id", false), //
    DAT1("types_date_time", "dat1", true), //
    DAT1$DESC("types_date_time", "dat1", false), //
    TS1("types_date_time", "ts1", true), //
    TS1$DESC("types_date_time", "ts1", false), //
    TS2("types_date_time", "ts2", true), //
    TS2$DESC("types_date_time", "ts2", false), //
    TS3("types_date_time", "ts3", true), //
    TS3$DESC("types_date_time", "ts3", false), //
    TS4("types_date_time", "ts4", true), //
    TS4$DESC("types_date_time", "ts4", false), //
    TS5("types_date_time", "ts5", true), //
    TS5$DESC("types_date_time", "ts5", false), //
    TIM1("types_date_time", "tim1", true), //
    TIM1$DESC("types_date_time", "tim1", false), //
    TIM2("types_date_time", "tim2", true), //
    TIM2$DESC("types_date_time", "tim2", false), //
    TIM3("types_date_time", "tim3", true), //
    TIM3$DESC("types_date_time", "tim3", false), //
    TIM4("types_date_time", "tim4", true), //
    TIM4$DESC("types_date_time", "tim4", false), //
    TIM5("types_date_time", "tim5", true), //
    TIM5$DESC("types_date_time", "tim5", false), //
    IVT1("types_date_time", "ivt1", true), //
    IVT1$DESC("types_date_time", "ivt1", false), //
    IVT2("types_date_time", "ivt2", true), //
    IVT2$DESC("types_date_time", "ivt2", false), //
    IVT3("types_date_time", "ivt3", true), //
    IVT3$DESC("types_date_time", "ivt3", false), //
    IVT4("types_date_time", "ivt4", true), //
    IVT4$DESC("types_date_time", "ivt4", false), //
    IVT5("types_date_time", "ivt5", true), //
    IVT5$DESC("types_date_time", "ivt5", false), //
    IVT6("types_date_time", "ivt6", true), //
    IVT6$DESC("types_date_time", "ivt6", false), //
    IVT7("types_date_time", "ivt7", true), //
    IVT7$DESC("types_date_time", "ivt7", false), //
    IVT8("types_date_time", "ivt8", true), //
    IVT8$DESC("types_date_time", "ivt8", false), //
    IVT9("types_date_time", "ivt9", true), //
    IVT9$DESC("types_date_time", "ivt9", false), //
    IVT10("types_date_time", "ivt10", true), //
    IVT10$DESC("types_date_time", "ivt10", false), //
    IVT11("types_date_time", "ivt11", true), //
    IVT11$DESC("types_date_time", "ivt11", false), //
    IVT12("types_date_time", "ivt12", true), //
    IVT12$DESC("types_date_time", "ivt12", false), //
    IVT13("types_date_time", "ivt13", true), //
    IVT13$DESC("types_date_time", "ivt13", false), //
    IVT14("types_date_time", "ivt14", true), //
    IVT14$DESC("types_date_time", "ivt14", false), //
    IVT15("types_date_time", "ivt15", true), //
    IVT15$DESC("types_date_time", "ivt15", false), //
    IVT16("types_date_time", "ivt16", true), //
    IVT16$DESC("types_date_time", "ivt16", false), //
    IVT17("types_date_time", "ivt17", true), //
    IVT17$DESC("types_date_time", "ivt17", false);

    private TypesDateTimeOrderBy(final String tableName, final String columnName,
        boolean ascending) {
      this.tableName = tableName;
      this.columnName = columnName;
      this.ascending = ascending;
    }

    private String tableName;
    private String columnName;
    private boolean ascending;

    public String getTableName() {
      return this.tableName;
    }

    public String getColumnName() {
      return this.columnName;
    }

    public boolean isAscending() {
      return this.ascending;
    }

  }

  // Database Table metadata

  public static TypesDateTimeTable newTable() {
    return new TypesDateTimeTable();
  }

  public static TypesDateTimeTable newTable(final String alias) {
    return new TypesDateTimeTable(alias);
  }

  public static class TypesDateTimeTable extends Table {

    // Properties

    public NumberColumn id;
    public DateTimeColumn dat1;
    public DateTimeColumn ts1;
    public DateTimeColumn ts2;
    public DateTimeColumn ts3;
    public DateTimeColumn ts4;
    public DateTimeColumn ts5;
    public DateTimeColumn tim1;
    public DateTimeColumn tim2;
    public DateTimeColumn tim3;
    public DateTimeColumn tim4;
    public DateTimeColumn tim5;
    public ObjectColumn ivt1;
    public ObjectColumn ivt2;
    public ObjectColumn ivt3;
    public ObjectColumn ivt4;
    public ObjectColumn ivt5;
    public ObjectColumn ivt6;
    public ObjectColumn ivt7;
    public ObjectColumn ivt8;
    public ObjectColumn ivt9;
    public ObjectColumn ivt10;
    public ObjectColumn ivt11;
    public ObjectColumn ivt12;
    public ObjectColumn ivt13;
    public ObjectColumn ivt14;
    public ObjectColumn ivt15;
    public ObjectColumn ivt16;
    public ObjectColumn ivt17;

    // Constructors

    TypesDateTimeTable() {
      super(null, null, "types_date_time", "Table", null);
      initialize();
    }

    TypesDateTimeTable(final String alias) {
      super(null, null, "types_date_time", "Table", alias);
      initialize();
    }

    // Initialization

    private void initialize() {
      this.id = new NumberColumn(this, "id", "id");
      this.dat1 = new DateTimeColumn(this, "dat1", "dat1");
      this.ts1 = new DateTimeColumn(this, "ts1", "ts1");
      this.ts2 = new DateTimeColumn(this, "ts2", "ts2");
      this.ts3 = new DateTimeColumn(this, "ts3", "ts3");
      this.ts4 = new DateTimeColumn(this, "ts4", "ts4");
      this.ts5 = new DateTimeColumn(this, "ts5", "ts5");
      this.tim1 = new DateTimeColumn(this, "tim1", "tim1");
      this.tim2 = new DateTimeColumn(this, "tim2", "tim2");
      this.tim3 = new DateTimeColumn(this, "tim3", "tim3");
      this.tim4 = new DateTimeColumn(this, "tim4", "tim4");
      this.tim5 = new DateTimeColumn(this, "tim5", "tim5");
      this.ivt1 = new ObjectColumn(this, "ivt1", "ivt1");
      this.ivt2 = new ObjectColumn(this, "ivt2", "ivt2");
      this.ivt3 = new ObjectColumn(this, "ivt3", "ivt3");
      this.ivt4 = new ObjectColumn(this, "ivt4", "ivt4");
      this.ivt5 = new ObjectColumn(this, "ivt5", "ivt5");
      this.ivt6 = new ObjectColumn(this, "ivt6", "ivt6");
      this.ivt7 = new ObjectColumn(this, "ivt7", "ivt7");
      this.ivt8 = new ObjectColumn(this, "ivt8", "ivt8");
      this.ivt9 = new ObjectColumn(this, "ivt9", "ivt9");
      this.ivt10 = new ObjectColumn(this, "ivt10", "ivt10");
      this.ivt11 = new ObjectColumn(this, "ivt11", "ivt11");
      this.ivt12 = new ObjectColumn(this, "ivt12", "ivt12");
      this.ivt13 = new ObjectColumn(this, "ivt13", "ivt13");
      this.ivt14 = new ObjectColumn(this, "ivt14", "ivt14");
      this.ivt15 = new ObjectColumn(this, "ivt15", "ivt15");
      this.ivt16 = new ObjectColumn(this, "ivt16", "ivt16");
      this.ivt17 = new ObjectColumn(this, "ivt17", "ivt17");
    }

  }

}
