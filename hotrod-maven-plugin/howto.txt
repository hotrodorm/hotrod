To run HotRod from Maven, you'll need to do two things:

1. Prepare a local properties file for the developer. For example 'dev.properties' with the user's properties:

  # local HotRod properties
  url=jdbc:postgresql://192.168.56.213:5432/postgres
  username=postgres
  password=mypassword
  catalog=
  schema=public
  facets=
  display=list

2. Configure the HotRod Generation (local props, project props, JDBC driver) in the pom file. If the project has 
modules, configure it on any module(s) that use HotRod. It doesn't need to be declared in the main project pom
if the main project doesn't use HotRod. That is, specify it only on the modules that generate code using HotRod.

For example:

  <build>

    <plugins>

      ...

      <plugin>
        <groupId>org.hotrodorm.hotrod</groupId>
        <artifactId>hotrod-maven-plugin</artifactId>
        <version>3.0.1</version>

        <configuration>
          <localproperties>dev.properties</localproperties>
          <configfile>src/main/hotrod/hotrod.xml</configfile>
          <generator>MyBatis-Spring</generator>
          <driverclass>org.postgresql.Driver</driverclass>
        </configuration>

        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.5.jre6</version>
            <type>jar</type>
          </dependency>
        </dependencies>

      </plugin>

      ...
      
    </plugins>

  </build>
      
3. Run the HotRod generation on the project (or on a/the module(s)):

3.1 If the project is a single module, type:
 mvn hotrod:gen
 
* If the project is divided into modules, specify the module names:

** For example, if you want to run HotRod for "module3", type:
 mvn hotrod:gen -pl module3
 
** If you want to run HotRod for "module3" and also "module4" at once, type:
 mvn hotrod:gen -pl module3,module4
 
Note: in the case of modules, all configuration files, directories, and generated files are relative
to the module base dir.
 

 
 
 
 
 