<?xml version="1.0"?>
<project name="hotrod-database" basedir=".">

  <!-- Global Properties -->

  <loadproperties srcFile="build.properties" />
  <loadproperties srcFile="conf/workbench.properties" />

  <target name="-init">
    <loadproperties srcfile="${db.src.dir}/config.properties" />
  </target>

  <!-- ============== -->
  <!-- Database build -->
  <!-- ============== -->

  <target name="build-database" depends="-init">
    <sql driver="${driverclass}"
         classpath="${db.src.dir}/${driverclasspath}"
         url="${url}"
         userid="${username}"
         password="${password}"
         delimiter=";"
         onerror="abort">
      <fileset file="${db.src.dir}/${database}/build-structure.sql" />
    </sql>
    <antcall target="build-sp" />
    <antcall target="build-data" />
  </target>

  <target name="clean-database" depends="-init">
    <sql driver="${driverclass}"
         classpath="${db.src.dir}/${driverclasspath}"
         url="${url}"
         userid="${username}"
         password="${password}"
         delimiter=";"
         onerror="continue">
      <fileset file="${db.src.dir}/${database}/clean-structure.sql" />
    </sql>
    <antcall target="clean-sp" />
  </target>

  <target name="build-sp" depends="-init">
    <sql driver="${driverclass}"
         classpath="${db.src.dir}/${driverclasspath}"
         url="${url}"
         userid="${username}"
         password="${password}"
         keepformat="true"
         delimiter="//"
         autocommit="true"
         onerror="abort">
      <fileset file="${db.src.dir}/${database}/build-sp.sql" />
    </sql>
  </target>

  <target name="clean-sp" depends="-init">
    <sql driver="${driverclass}"
         classpath="${db.src.dir}/${driverclasspath}"
         url="${url}"
         userid="${username}"
         password="${password}"
         keepformat="true"
         delimiter="//"
         onerror="continue">
      <fileset file="${db.src.dir}/${database}/clean-sp.sql" />
    </sql>
  </target>

  <target name="run-sp" depends="-init">
    <sql driver="${driverclass}"
         classpath="${db.src.dir}/${driverclasspath}"
         url="${url}"
         userid="${username}"
         password="${password}"
         delimiter="//"
         autocommit="true"
         onerror="abort">
      <fileset file="${db.src.dir}/${database}/run-sp.sql" />
    </sql>
  </target>

  <target name="run-sp2" depends="-init">
    <sql driver="${driverclass}"
         classpath="${db.src.dir}/${driverclasspath}"
         url="${url}"
         userid="${username}"
         password="${password}"
      
         delimiter="//"
      
         autocommit="true"
      
         print="true"
         showheaders="true"
         showtrailers="true"
      
         onerror="abort">
      begin
          dbms_output.put_line ('Hello World 1');
      end;
      //
    </sql>
  </target>

  <target name="build-data" depends="-init">
    <sql driver="${driverclass}"
         classpath="${db.src.dir}/${driverclasspath}"
         url="${url}"
         userid="${username}"
         password="${password}"
         delimiter=";"
         autocommit="true"
         onerror="abort">
      <fileset file="${db.src.dir}/${database}/scenarios/${scenario}/build-data.sql" />
    </sql>
  </target>

  <target name="clean-data" depends="-init">
    <sql driver="${driverclass}"
         classpath="${db.src.dir}/${driverclasspath}"
         url="${url}"
         userid="${username}"
         password="${password}"
         delimiter=";"
         onerror="continue">
      <fileset file="${db.src.dir}/${database}/scenarios/${scenario}/clean-data.sql" />
    </sql>
  </target>

  <target name="rebuild-database" depends="clean-database, build-database" />

  <target name="rebuild-sp" depends="clean-sp, build-sp" />

  <target name="rebuild-data" depends="clean-data, build-data" />

  <!-- ================= -->
  <!-- HotRod generation -->
  <!-- ================= -->

  <target name="-init-hotrod" depends="-init">
    <mkdir dir="gen/hotrod/mappers" />
    <mkdir dir="gen/hotrod/daos" />
  </target>

  <target name="clean-hotrod" depends="-init-hotrod">
    <delete includeemptydirs="true">
      <fileset dir="gen/hotrod/mappers" includes="**/*" />
      <fileset dir="gen/hotrod/daos" includes="**/*" />
    </delete>
    <mkdir dir="gen/hotrod/mappers/persistence" />
  </target>

  <target name="build-hotrod" depends="-init-hotrod">

    <taskdef name="hotrod" classname="org.hotrod.ant.HotRodAntTask">
      <classpath>
        <pathelement location="dist/hotrod-${version}.jar" />
        <pathelement location="${db.src.dir}/${driverclasspath}" />
        <pathelement location="lib/apache-commons/commons-jexl3-3.1.jar" />
        <pathelement location="lib/apache-commons/commons-logging-1.2.jar" />
      </classpath>
    </taskdef>

    <hotrod driverclass="${driverclass}"
            url="${url}"
            username="${username}"
            password="${password}"
            catalog="${catalog}"
            schema="${schema}"
            generator="${generator}"
            facets="${facets}"
            configfile="${db.src.dir}/${hotrod.config.xml}"
            display="list" />

  </target>

</project>
