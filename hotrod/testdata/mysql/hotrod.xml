<?xml version="1.0"?>
<!DOCTYPE hotrod SYSTEM "hotrod.dtd">

<hotrod>

  <generators>
    <mybatis>
      <daos gen-base-dir="gen/hotrod/daos" dao-package="hotrod.test.generation" />
      <mappers gen-base-dir="gen/hotrod/mappers" relative-dir="persistence" />
      <mybatis-configuration-template
        file="mybatis-config-template.xml" />
      <session-factory singleton-full-class-name="sessionfactory.DatabaseSessionFactory" />
      <select-generation temp-view-base-name="mybatis_temp_view" />
    </mybatis>
  </generators>

  <table name="config_values" /> <!-- No PK -->

  <table name="properties" />
  <table name="parameters">
    <column name="level2" java-type="java.lang.Long" jdbc-type="NUMERIC" />
  </table>
  <table name="log" />

  <table name="account"> <!-- identity PK -->
    <auto-generated-column name="id" />
  </table>

  <table name="transaction">  <!-- Identity PK optional -->
    <auto-generated-column name="seq_id"
      allows-specified-value="true" />
  </table>

  <table name="state_branch" />
  <table name="federal_branch" />
  <table name="client" />

  <table name="agent"> <!-- No sequences in MySQL, so this is an identity -->
    <auto-generated-column name="id" />
  </table>

  <table name="codes" column-seam="_">
    <auto-generated-column name="id" />
  </table>

  <table name="quadrant" />
  <table name="application_config" />

  <table name="vehicle">
    <auto-generated-column name="id" />
    <version-control-column name="version_number" />
    <column name="version_number" java-type="java.lang.Short"
      jdbc-type="NUMERIC" initial-value="4" min-value="-7" max-value="7" />
  </table>

  <table name="types_numeric" />
  <table name="types_char" />
  <table name="types_binary" />
  <table name="types_date_time" />
  <table name="types_other" />

  <!-- <dao java-class-name="Sequences"> <sequence name="seq_agent" /> <sequence 
    name="seq_codes" /> </dao> -->

  <view name="tx_branch">
    <column name="amount" java-type="java.lang.Long" jdbc-type="NUMERIC" />
  </view>

  <select java-class-name="AccountTx0DAO">
  <![CDATA[
    select a.* , t.*
    from account a, transaction t
    where t.account_id = a.id
        and a.current_balance &lt; 1000
    ]]>
  </select>

  <select java-class-name="AccountTx1DAO">
    <column name="account_id" java-type="java.lang.Long"
      jdbc-type="NUMERIC" />
    <![CDATA[
 		select a.* , t.*
		  from account a, transaction t
		  where t.account_id = a.id
        {*
			  and a.current_balance &lt;= 
			    #{maxBalance,javaType=java.lang.Integer,jdbcType=NUMERIC}
			  and t.amount &gt;= 
			    #{minAmount,javaType=java.lang.Integer,jdbcType=NUMERIC}
        *}
    	order by a.current_balance
    ]]>
  </select>

  <select java-class-name="BigAccountTxDAO" complement-start="[+-"
    complement-end="**)">
	<![CDATA[
		select a.* , t.*
		from account a, transaction t
		where t.account_id = a.id
  		[+-
      and a.current_balance &lt;= #{maxBalance,javaType=java.lang.Integer,jdbcType=NUMERIC}
  		**)
  		
		  [+-
      and t.amount &gt;= #{minTxAmount,javaType=java.lang.Integer,jdbcType=NUMERIC}
	  	**)
		]]>
  </select>

  <select java-class-name="UnusualTxDAO">
  <![CDATA[
    select a.* , t.*
    from account a, transaction t
    where t.account_id = a.id
      {*
      and a.current_balance &lt;= #{maxBalance,javaType=java.lang.Integer,jdbcType=NUMERIC}
      and t.amount &gt;= #{minAmount,javaType=java.lang.Integer,jdbcType=NUMERIC}
      order by a.id, t.seq_id
      limit #{maxRows,javaType=java.lang.Integer,jdbcType=NUMERIC}
      offset #{offset,javaType=java.lang.Integer,jdbcType=NUMERIC}
      *}
    ]]>
  </select>

  <!-- <select name="bad_select"> <![CDATA[ select a.* , t.* from account 
    a transaction t where t.account_id = a.id {* and a.current_balance <= #{maxBalance,javaType=java.lang.Integer,jdbcType=NUMERIC} 
    and t.amount >= #{minAmount,javaType=java.lang.Integer,jdbcType=NUMERIC} 
    order by a.id, t.seq_id limit #{maxRows,javaType=java.lang.Integer,jdbcType=NUMERIC} 
    offset #{offset,javaType=java.lang.Integer,jdbcType=NUMERIC} *} ]]> </select> -->

  <select java-class-name="MultParamSelectDAO">
  <![CDATA[
    select a.* , t.*
    from account a, transaction t
    where t.account_id = a.id
      {*
      and a.current_balance &lt;= #{max_amount,javaType=java.lang.Integer,jdbcType=NUMERIC}
      and t.amount &lt;= #{max_amount}
      order by a.id, t.seq_id
      *}
    ]]>
  </select>

</hotrod>
