<?xml version="1.0"?>
<!DOCTYPE hotrod>

<hotrod>

  <generators>

<!-- 
-->
    <mybatis>
      <daos gen-base-dir="gen/hotrod/daos" dao-package="hotrod.test.generation" />
      <mappers gen-base-dir="gen/hotrod/mappers" relative-dir="persistence" />
      <mybatis-configuration-template
        file="mybatis-config-template.xml" />
      <session-factory singleton-full-class-name="sessionfactory.DatabaseSessionFactory" />
      <select-generation temp-view-base-name="hotrod_temp_view" />
      <property name="checked.persistence.exception" value="true" />
      <property name="multiline.tostring" value="true" />
    </mybatis>

    <spring-jdbc>
      <daos gen-base-dir="gen/hotrod-spring/daos" dao-package="hotrod.test.generation" />
      <config gen-base-dir="gen/hotrod-spring/daos/"
        relative-dir="config" prefix="prueba-hr-" />
      <select-generation temp-view-base-name="unused" />
    </spring-jdbc>

  </generators>

  <converter name="boolean_stored_as_number_4" java-type="java.lang.Boolean"
    class="tests.typehandler.BooleanShortConverter"
    java-intermediate-type="java.lang.Short" />

  <converter name="boolean_stored_as_bytea" java-type="java.lang.Boolean"
    class="tests.typehandler.BooleanByteaConverter"
    java-intermediate-type="byte[]" />

  <facet name="phase2">

    <select java-class-name="AccountTx31">
      select * from account a
    </select>

    <select java-class-name="AccountTx3">
      select *
      from account a
      <complement>
        where current_balance between
        #{minBalance,javaType=java.lang.Integer,jdbcType=NUMERIC}
        and #{maxBalance,javaType=java.lang.Integer,jdbcType=NUMERIC}
      </complement>
    </select>

  </facet>

  <table name=" !#$%)(*+,-." java-name="House">
    <column name=":&lt;>?&amp;" java-name="color" />
    <column name="@[\]^_" java-name="kind" />
    <column name="`{|}~" java-name="type" />
  </table>
  
<!-- 
  <table name="test_sequence">
    <auto-generated-column name="id" sequence="seq_test" />
  </table>
  
  <facet name="phase2">

    <dao java-class-name="Dao2" />

  </facet>
 -->

  <select java-class-name="AccountByIds">
    <column name="current_balance" java-type="java.lang.Double" />

    select * from account

    <complement>
<!-- 
      <bind name="namePattern"
        value="#{name,javaType=java.lang.String,jdbcType=VARCHAR} == null ? null: ('%' + #{name} + '%')" />
      <bind name="extraBalance"
        value="#{type,javaType=java.lang.String,jdbcType=VARCHAR} == 'CHK' ? 100 : 0" />
-->
      <where>
        <if
          test="#{minBalance,javaType=java.lang.Integer,jdbcType=NUMERIC} != null &amp;&amp; #{minBalance} > 10">
          current_balance > #{minBalance} <!--  + #{extraBalance} --> 
        </if>
        <if
          test="#{maxBalance,javaType=java.lang.Integer,jdbcType=NUMERIC} != null &amp;&amp; #{maxBalance} &lt; 500">
          and current_balance &lt; #{maxBalance}
        </if>
        <!-- 
        <if test="#{name} != null">
          and name like '#{namePattern}'
        </if>
        -->
        <if
          test="#{ids,javaType=java.util.List&lt;java.lang.Integer>,jdbcType=ARRAY} != null &amp;&amp; !empty #{ids}">
          and id in
<!--            
          <foreach item="item" index="index" collection="#{ids}"
            open="(" separator="," close=")">#{item}</foreach>
-->            
        </if>
      </where>

      <choose>
        <when
          test="#{sortType,javaType=java.lang.Integer,jdbcType=NUMERIC} == 1">
          order by type
        </when>
        <when test="#{sortType} == 2">
          order by created_on
        </when>
        <otherwise>
          order by id
        </otherwise>
      </choose>

    </complement>

  </select>

  <fragment file="hotrod-finances.xml" />

  <fragment file="hotrod-core-and-types.xml" />
<!--
-->

</hotrod>

