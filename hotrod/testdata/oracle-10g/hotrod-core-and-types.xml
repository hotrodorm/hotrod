<?xml version="1.0"?>
<!DOCTYPE hotrod-fragment SYSTEM "hotrod-fragment.dtd">

<hotrod-fragment>

  <table name="config_values"/>

  <table name="properties" java-name="Property" />
  <table name="parameters">
    <column name="level2" java-name="level" java-type="java.lang.Long"
      jdbc-type="NUMERIC" />
  </table>
  <table name="log" />

  <table name="account">

    <auto-generated-column name="id" sequence="seq_account" />

<!-- Not yet implemented. Recorded as HOT-55 
    <select java-method-name="selectSmallAccounts"><![CDATA[
      select a.*
        from account a
        {* 
        where current_balance &lt; #{maxBalance,javaType=java.lang.Integer,jdbcType=NUMERIC}
        *}
    ]]></select>
 -->

<!-- 
-->
    <version-control-column name="row_version" />
  </table>
  
  <table name="transaction">
    <auto-generated-column name="seq_id" sequence="seq_transaction" />
  </table>

  <table name="state_branch" />
  
  <table name="federal_branch">
  </table>
  
  <table name="client" />

  <table name="agent">
    <auto-generated-column name="id" sequence="seq_agent" />
    <column name="id" java-name="agentId" />
  </table>

  <table name="codes" column-seam="_">
    <auto-generated-column name="id" sequence="seq_codes" />
  </table>

  <table name="quadrant">
    <column name="active_state" converter="boolean_stored_as_short" />
  </table>
   
  <table name="application_config" />


  <table name="types_numeric" />
  <table name="types_char" />
  <table name="types_binary" />
  <table name="types_date_time" />

  <facet name="phase2">

    <table name="types_other">

      <sequence name="seq_codes" java-method-name="getCodeSequence" />

      <sequence name="seq_name" />
      <sequence name="seq_name2" java-method-name="getSeqName" />

      <query java-method-name="applyAccountPromotion74">
      <![CDATA[
      update account a
        set current_balance = current_balance + #{reward,javaType=java.lang.Integer,jdbcType=NUMERIC}
        where created_on between #{from,javaType=java.util.Date,jdbcType=TIMESTAMP}
                             and #{to,javaType=java.util.Date,jdbcType=TIMESTAMP}
          and (select count(*) from transaction where account_id = a.id)
              > #{minTransactions,javaType=java.lang.Integer,jdbcType=NUMERIC}
      ]]>
      </query>

    </table>

    <dao java-class-name="Promotions">

      <sequence name="seq_agent" />

      <sequence name="seq_codes" java-method-name="getCodeSequence" />

      <query java-method-name="applyAccountPromotion74">
      <![CDATA[
      update account a
        set current_balance = current_balance + #{reward,javaType=java.lang.Integer,jdbcType=NUMERIC}
        where created_on between #{from,javaType=java.util.Date,jdbcType=TIMESTAMP}
                             and #{to,javaType=java.util.Date,jdbcType=TIMESTAMP}
          and (select count(*) from transaction where account_id = a.id)
              > #{minTransactions,javaType=java.lang.Integer,jdbcType=NUMERIC}
      ]]>
      </query>

      <query java-method-name="applyAccountPromotion75">
      <![CDATA[
      update account a
        set current_balance = current_balance + #{reward,javaType=java.lang.Integer,jdbcType=NUMERIC}
        where current_balance between #{minBalance,javaType=java.lang.Integer,jdbcType=NUMERIC}
                             and #{maxBalance,javaType=java.lang.Integer,jdbcType=NUMERIC}
      ]]>
      </query>

    </dao>

    <view name="types_extra" />

    <view name="tx_branch">
      <column name="amount" java-name="total" java-type="java.lang.Long" />
      <!-- <column name="non-existent" java-name="badColumn" /> <column name="amount" 
        java-type="java.lang.Long" jdbc-type="NUMERIC" /> -->

      <sequence name="seq_codes" java-method-name="getCodeSequence" />

      <query java-method-name="applyAccountPromotion74">
      <![CDATA[
      update account a
        set current_balance = current_balance + #{reward,javaType=java.lang.Integer,jdbcType=NUMERIC}
        where created_on between #{from,javaType=java.util.Date,jdbcType=TIMESTAMP}
                             and #{to,javaType=java.util.Date,jdbcType=TIMESTAMP}
          and (select count(*) from transaction where account_id = a.id)
              > #{minTransactions,javaType=java.lang.Integer,jdbcType=NUMERIC}
      ]]>
      </query>

    </view>

  </facet>
  
  <select java-class-name="CurrentQuadrant" >
    <column name="active_state" converter="boolean_stored_as_short" />
  <![CDATA[
    select * 
      from quadrant
  ]]></select>
  

</hotrod-fragment>
