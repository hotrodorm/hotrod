<?xml version="1.0"?>
<!DOCTYPE hotrod SYSTEM "hotrod.dtd">

<hotrod>

  <generators>
    <mybatis>
      <daos gen-base-dir="gen/hotrod/daos" dao-package="hotrod.test.generation" />
      <mappers gen-base-dir="gen/hotrod/mappers" relative-dir="persistence" />
      <mybatis-configuration-template file="mybatis-config-template.xml" />
      <session-factory singleton-full-class-name="sessionfactory.DatabaseSessionFactory" />
      <select-generation temp-view-base-name="mybatis_temp_view" />
    </mybatis>
  </generators>

<?comment
?>
  <table name="config_values" /> <!-- No PK -->
  <table name="properties" />
  <table name="parameters" />
  <table name="log" />

  <table name="account" /> <!-- identity always PK -->

  <table name="transaction"> <!-- identity by default PK -->
    <query method="award10">
      update transaction set amount = amount + 10
    </query>
  </table>

  <table name="state_branch" />
  <table name="federal_branch" />
  <table name="client" />

  <table name="agent"> <!-- sequence-generated PK -->
    <column name="id" sequence="seq_agent" />
  </table>

  <table name="codes" column-seam="_" />
  <table name="quadrant" />

  <table name="application_config" />
  
  <table name="test_seq_ide_def1">
    <column name="extra_id1" sequence="gen_seq1" />
    <column name="extra_id2" sequence="gen_seq2" />
  </table>

  <table name="test_identity1" />

  <table name="types_char" />
  <table name="types_numeric" />
  <table name="types_date_time" />
  <table name="types_binary" />
  <table name="types_other" />

  <table name="special_columns" />

  <table name="vehicle" />

  <view name="tx_branch">
    <column name="amount" java-type="java.lang.Long" jdbc-type="NUMERIC" />
  </view>

  <view name="types_pseudo1" />
  <view name="types_pseudo2" />

  <dao class="Executor1">
  
    <select method="findAccountTxDAO" vo="AccountTxDAO">
      select a.*, t.*
      from account a, transaction t
      <complement>
        where t.account_id = a.id
      </complement>
    </select>
  
    <select method="findAccountTx2DAO" vo="AccountTx2DAO">
      <parameter name="maxAmount" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
      select a.* , t.*
      from account a, transaction t
      where t.account_id = a.id
      <complement>
        <if test="maxAmount != null">
          and t.amount &lt;= #{maxAmount}
        </if>
      </complement>
    </select>
  
    <select method="findAccountTx3DAO" vo="AccountTx3DAO">
      <parameter name="maxAmount" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
      select a.* , t.*
      from account a, transaction t
      where t.account_id = a.id
      <complement>
        <if test="maxAmount != null">
          and t.amount1 &lt;= #{maxAmount}
          and t.amount2 &lt;= #{maxAmount}
        </if>
      </complement>
    </select>
  
  </dao>

  <table name="'car#part$Price'" />
  
  <table name="cursor_example1" />

<?comment
?>

  <table name="'house_ROOM'" />
  <table name="account_alert" schema="schema2" />
  <table name="house" schema="schema2" />

  <view name="low_account" schema="schema2" />

  <dao class="AlertFinder">
    <select method="findAlerts">
      select
      <columns>
        <vo table="account" alias="a" extended-vo="Account2VO">
          <collection table="account_alert" schema="schema2" property="alerts" alias="aa" extended-vo="Alert2VO">
            <association table="house" property="house" schema="schema2" alias="h" /> 
          </collection>
        </vo>
      </columns>
        from account a 
        join schema2.account_alert aa on a.id = aa.account_id
        join schema2.house h on h.id = aa.house_id
        where a.current_balance >= 100
    </select>
  </dao>

</hotrod>
