<?xml version="1.0"?>
<!DOCTYPE hotrod-fragment>

<hotrod-fragment>

  <enum name="employee_state" name-column="description" />

  <enum name="employee_interim" name-column="caption" />

  <table name="employee" />

  <table name="config_values" />

  <table name="properties" java-name="Property" />

  <table name="parameters">
    <column name="level2" java-name="level" java-type="java.lang.Long" jdbc-type="NUMERIC" />
  </table>

  <table name=" !#$%)(*+,-." java-name="House">
    <column name=":&lt;>?&amp;" java-name="color" />
    <column name="@[\]^_" java-name="kind" />
    <column name="`{|}~" java-name="type" />
  </table>

  <table name="log" />

  <table name="account"> <!-- identity always PK -->
    <version-control-column name="row_version" />
  </table>

  <view name="hefty_account" />

  <table name="transaction" /> <!-- identity by default PK -->

  <table name="state_branch" />

  <table name="federal_branch" />

  <table name="client" />

  <table name="agent" sequence="seq_agent" /> <!-- sequence-generated PK -->

  <table name="deputy" />

  <table name="codes" column-seam="_">
    <!-- Forced to use this tag instead of the attribute 'sequence' since the table does not have a PK -->
    <auto-generated-column name="id" sequence="seq_codes" />
  </table>

  <table name="application_config" />

  <table name="types_numeric" />

  <table name="types_char" />

  <table name="types_binary" />

  <table name="types_date_time" />

  <facet name="phase2">

    <table name="types_other">

      <sequence name="seq_codes" java-method-name="getCodeSequence" />

      <sequence name="seq_name" />
      <sequence name="seq_name2" java-method-name="getSeqName" />

      <query java-method-name="applyAccountPromotion74">

        <parameter name="reward" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
        <parameter name="from" java-type="java.util.Date" jdbc-type="TIMESTAMP" />
        <parameter name="to" java-type="java.util.Date" jdbc-type="TIMESTAMP" />
        <parameter name="minBalance" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
        <parameter name="maxBalance" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
        <parameter name="type" java-type="java.lang.String" jdbc-type="VARCHAR" />

        update account a
        set current_balance = current_balance + #{reward}
        <where>
          <if test="from != null">
            and created_on >= #{from}
          </if>
          <if test="to != null">
            and created_on &lt;= #{to}
          </if>
          <if test="minBalance != null">
            and current_balance >= #{minBalance}
          </if>
          <if test="maxBalance != null">
            and current_balance &lt;= #{maxBalance}
          </if>
          <if test="type != null">
            and type = #{type}
          </if>
        </where>

      </query>

    </table>

    <dao java-class-name="Promotions">

      <sequence name="seq_agent" />

      <sequence name="seq_codes" java-method-name="getCodeSequence" />

      <query java-method-name="applyAccountPromotion74">

        <parameter name="reward" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
        <parameter name="from" java-type="java.util.Date" jdbc-type="TIMESTAMP" />
        <parameter name="to" java-type="java.util.Date" jdbc-type="TIMESTAMP" />
        <parameter name="minTransactions" java-type="java.lang.Integer" jdbc-type="NUMERIC" />

        update account a
        set current_balance = current_balance + #{reward}
        where created_on between #{from}
        and #{to}
        and (select
        count(*) from transaction where account_id = a.id)
        > #{minTransactions}

      </query>

      <query java-method-name="applyAccountPromotion75">

        <parameter name="reward" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
        <parameter name="minBalance" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
        <parameter name="maxBalance" java-type="java.lang.Integer" jdbc-type="NUMERIC" />

        update account a
        set current_balance = current_balance + #{reward}
        where current_balance between #{minBalance} and
        #{maxBalance}

      </query>

    </dao>

    <view name="tx_branch">
      <column name="amount" java-name="total" java-type="java.lang.Long" />

      <sequence name="seq_codes" java-method-name="getCodeSequence" />

      <query java-method-name="applyAccountPromotion74">

        <parameter name="reward" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
        <parameter name="from" java-type="java.util.Date" jdbc-type="TIMESTAMP" />
        <parameter name="to" java-type="java.util.Date" jdbc-type="TIMESTAMP" />
        <parameter name="minTransactions" java-type="java.lang.Integer" jdbc-type="NUMERIC" />

        update account a
        set current_balance = current_balance + #{reward}
        where created_on between #{from}
        and #{to}
        and (select
        count(*) from transaction where account_id = a.id)
        > #{minTransactions}

      </query>

    </view>

  </facet>

</hotrod-fragment>
