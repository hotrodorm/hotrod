<?xml version="1.0"?>
<!DOCTYPE hotrod-fragment>

<hotrod-fragment>

  <!-- DAOs -->

  <dao java-class-name="SelectsDAO">

    <!-- Case 1 - Flat Join -->

    <select method="findAccountWithPersonFlat" vo="AccountPersonFlatVO">

      <parameter name="clientId" java-type="java.lang.Integer" jdbc-type="NUMERIC" />

      <column name="type" converter="account_type" />
      <column name="person_type" converter="person_type" />
      <column name="active" converter="account_status" />

      select
      a.*,
      p.id "person_id", p.name, p.type "person_type"
      from account a
      join person p on (p.id) = (a.person_id)
      <complement>
        where a.id = #{clientId}
      </complement>

    </select>

    <!-- Case 2 - Select returns multiple VOs -->

    <select method="findAccountWithPerson">

      <parameter name="clientId" java-type="java.lang.Integer" jdbc-type="NUMERIC" />

      select
      <columns vo="AccountPersonVO">
        <vo table="account" property="account"> a.* </vo>
        <vo table="person" property="person" alias="p"></vo>
        <expressions> 
          a.balance * a.type as initial_load,
          p.id + p.type as score
        </expressions>
      </columns>
      from account a
      join person p on (p.id) = (a.person_id)
      <complement>
        where a.id = #{clientId}
      </complement>

    </select>

    <!-- 3 - Select returns a single VO and no expressions -->

<!--
    <select method="findRetirementAccount">

      <parameter name="clientId" java-type="java.lang.Integer" jdbc-type="NUMERIC" />

      select
      <columns>
        <vo table="account"> a.* </vo>
      </columns>
      from account a
      <complement>
        where a.id = #{clientId}
        and (type = 1 and account_number like 'RET-%'
        or type = 3 and account_number like
        'IRA-%')
      </complement>

    </select>
-->
    
    <!-- 7 - Collections and associations combined -->

    <select method="findExtendedPerson">

      <parameter name="clientId" java-type="java.lang.Integer" jdbc-type="NUMERIC" />

      select
      <columns>
        <vo table="person" extended-vo="ExtendedPersonVO">
          p.*
          <collection table="account" property="accounts" extended-vo="AccountWithTransactionsVO">
            a.*, p.name
            <collection table="transaction" property="transactions" alias="t" />
          </collection>
          <association table="category" property="category" alias="c" />
        </vo>
      </columns>
      from person p
      join account a on (a.person_id) = (p.id)
      join "transaction" t on (t.account_id) = (a.id)
      join category c on
      p.category_id = c.id
      <complement>
        where a.id = #{clientId}
      </complement>

    </select>
<!--
-->    

  </dao>

</hotrod-fragment>
