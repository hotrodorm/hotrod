<?xml version="1.0"?>
<!DOCTYPE hotrod SYSTEM "hotrod.dtd">

<hotrod>

	<generators>
		<mybatis>
			<daos gen-base-dir="gen/hotrod/daos" dao-package="hotrod.test.generation" />
			<!-- <daos gen-base-dir="gen/empusamb/daos" dao-package="empusa.test.generation.dao" 
				primitives-package="empusa.test.generation.prim" dao-prefix="" dao-suffix="DO" 
				primitives-prefix="" primitives-suffix="AO" /> -->
			<mappers gen-base-dir="gen/hotrod/mappers" relative-dir="persistence" />
			<mybatis-configuration-template file="mybatis-config-template.xml" />
			<session-factory singleton-full-class-name="sessionfactory.DatabaseSessionFactory" />
			<select-generation temp-view-base-name="mybatis_temp_view" />
		</mybatis>
	</generators>

	<table name="account" />

	<table name="transaction" />

	<table name="federal_branch">

		<select method="findFilteredTxBranch">
			select
			<columns>
				<vo view="tx_branch" alias="tb" />
			</columns>
			from tx_branch tb
		</select>

	</table>

	<view name="tx_branch" />

	<dao class="Executor1DAO">

		<select method="getAccountTx0" vo="AccountTx0VO">
			select a.* , t.*
			from account a, transaction t
			<complement>
				where t.account_id = a.id
				and a.current_balance &lt; 1000
			</complement>
		</select>

		<select method="findValuatedAccount">
			<parameter name="clientId" java-type="java.lang.Integer"
				jdbc-type="NUMERIC" />
			select
			<columns>
        <vo table="account" extended-vo="ValuatedAccountVO" alias="a">
					<collection table="transaction" property="transaction"
						alias="t" />
				</vo>
			</columns>
			from account a
			join transaction t on (t.account_id) = (a.id)
			<complement>
				where a.id = #{clientId}
			</complement>

		</select>

	</dao>

</hotrod>
