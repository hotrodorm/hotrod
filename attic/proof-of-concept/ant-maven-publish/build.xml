<project name="maven-central-publishing" default="clean-build" basedir=".">

  <property name="version" value="3.0.2" />

  <property name="main.src.dir" value="src/main/java" />
  <property name="runtime.src.dir" value="src/runtime/java" />
  <property name="build.dir" value="build" />
  <property name="main.build.dir" value="build/main" />
  <property name="runtime.build.dir" value="build/runtime" />
  <property name="main.javadoc.dir" value="build/main-javadoc" />
  <property name="runtime.javadoc.dir" value="build/runtime-javadoc" />
  <property name="dist.dir" value="dist" />
  <property name="bundles.dir" value="dist/bundles" />

  <taskdef name="ivy-configure" classname="org.apache.ivy.ant.IvyConfigure">
    <classpath>
      <pathelement location="lib/ivy-2.4.0.jar" />
    </classpath>
  </taskdef>
  <taskdef name="ivy-resolve" classname="org.apache.ivy.ant.IvyResolve">
    <classpath>
      <pathelement location="lib/ivy-2.4.0.jar" />
    </classpath>
  </taskdef>
  <taskdef name="ivy-retrieve" classname="org.apache.ivy.ant.IvyRetrieve">
    <classpath>
      <pathelement location="lib/ivy-2.4.0.jar" />
    </classpath>
  </taskdef>
  <taskdef name="ivy-makepom" classname="org.apache.ivy.ant.IvyMakePom">
    <classpath>
      <pathelement location="lib/ivy-2.4.0.jar" />
    </classpath>
  </taskdef>
  <taskdef name="ivy-publish" classname="org.apache.ivy.ant.IvyPublish">
    <classpath>
      <pathelement location="lib/ivy-2.4.0.jar" />
    </classpath>
  </taskdef>

  <target name="init">
    <mkdir dir="${main.build.dir}" />
    <mkdir dir="${runtime.build.dir}" />
    <mkdir dir="${main.javadoc.dir}" />
    <mkdir dir="${runtime.javadoc.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${bundles.dir}" />
  </target>

  <target name="clean" depends="init">
    <delete includeemptydirs="true">
      <fileset dir="${build.dir}" includes="**/*" />
      <fileset dir="${dist.dir}" includes="**/*" />
      <fileset dir="${bundles.dir}" includes="**/*" />
    </delete>
    <antcall target="init" />
  </target>

  <target name="compile-main" depends="init">
    <javac srcdir="${main.src.dir}"
           destdir="${main.build.dir}"
           debug="true"
           deprecation="true"
           source="1.6"
           target="1.6"
           includeantruntime="false"
           includes="**/*.java">
      <classpath>
      </classpath>
    </javac>
  </target>

  <target name="compile-runtime" depends="init">
    <javac srcdir="${runtime.src.dir}"
           destdir="${runtime.build.dir}"
           debug="true"
           deprecation="true"
           source="1.6"
           target="1.6"
           includeantruntime="false"
           includes="**/*.java">
      <classpath>
      </classpath>
    </javac>
  </target>

  <target name="jar" depends="compile-main, compile-runtime">

    <jar destfile="${dist.dir}/hot-${version}.jar">
      <fileset dir="${main.build.dir}" />
    </jar>
    <jar destfile="${dist.dir}/hot-${version}-sources.jar">
      <fileset dir="${main.src.dir}" />
    </jar>

    <jar destfile="${dist.dir}/hot-runtime-${version}.jar">
      <fileset dir="${runtime.build.dir}" />
    </jar>
    <jar destfile="${dist.dir}/hot-runtime-${version}-sources.jar">
      <fileset dir="${runtime.src.dir}" />
    </jar>

  </target>

  <target name="build" depends="jar" />

  <target name="clean-build" depends="clean, build, main-javadoc, poms, sign" />

  <target name="clean-build-bundle" depends="clean-build, bundle" />

  <target name="main-javadoc" depends="init">

    <javadoc destdir="${main.javadoc.dir}"
             author="true"
             version="true"
             use="true"
             windowtitle="Hot3">
      <fileset dir="${main.src.dir}" />
      <doctitle>Hot</doctitle>
    </javadoc>
    <jar destfile="${dist.dir}/hot-${version}-javadoc.jar">
      <fileset dir="${main.javadoc.dir}" />
    </jar>

    <javadoc destdir="${runtime.javadoc.dir}"
             author="true"
             version="true"
             use="true"
             windowtitle="Hot3 Runtime">
      <fileset dir="${runtime.src.dir}" />
      <doctitle>Hot Runtime</doctitle>
    </javadoc>
    <jar destfile="${dist.dir}/hot-runtime-${version}-javadoc.jar">
      <fileset dir="${runtime.javadoc.dir}" />
    </jar>

  </target>

  <target name="poms" depends="init">
    <copy file="src/main/metadata/pom.xml"
          tofile="${dist.dir}/hot-${version}.pom" />
    <copy file="src/runtime/metadata/pom.xml"
          tofile="${dist.dir}/hot-runtime-${version}.pom" />
  </target>

  <target name="sign" depends="init">
    <input message="Signing Artifacts - Please enter passphrase to unlock secret key: "
           addproperty="passphrase">
      <handler type="secure" />
    </input>

    <exec executable="gpg">
      <arg value="-ab" />
      <arg value="--passphrase" />
      <arg value="${passphrase}" />
      <arg value="${dist.dir}/hot-${version}.pom" />
    </exec>

    <exec executable="gpg">
      <arg value="-ab" />
      <arg value="--passphrase" />
      <arg value="${passphrase}" />
      <arg value="${dist.dir}/hot-${version}.jar" />
    </exec>

    <exec executable="gpg">
      <arg value="-ab" />
      <arg value="--passphrase" />
      <arg value="${passphrase}" />
      <arg value="${dist.dir}/hot-${version}-sources.jar" />
    </exec>

    <exec executable="gpg">
      <arg value="-ab" />
      <arg value="--passphrase" />
      <arg value="${passphrase}" />
      <arg value="${dist.dir}/hot-${version}-javadoc.jar" />
    </exec>

    <exec executable="gpg">
      <arg value="-ab" />
      <arg value="--passphrase" />
      <arg value="${passphrase}" />
      <arg value="${dist.dir}/hot-runtime-${version}.pom" />
    </exec>

    <exec executable="gpg">
      <arg value="-ab" />
      <arg value="--passphrase" />
      <arg value="${passphrase}" />
      <arg value="${dist.dir}/hot-runtime-${version}.jar" />
    </exec>

    <exec executable="gpg">
      <arg value="-ab" />
      <arg value="--passphrase" />
      <arg value="${passphrase}" />
      <arg value="${dist.dir}/hot-runtime-${version}-sources.jar" />
    </exec>

    <exec executable="gpg">
      <arg value="-ab" />
      <arg value="--passphrase" />
      <arg value="${passphrase}" />
      <arg value="${dist.dir}/hot-runtime-${version}-javadoc.jar" />
    </exec>

    <echo message="[ All artifacts signed ]" />

  </target>

  <target name="bundle" depends="init">
    <jar destfile="${bundles.dir}/hot-${version}-bundle.jar">
      <fileset file="${dist.dir}/hot-${version}*" />
    </jar>
    <jar destfile="${bundles.dir}/hot-runtime-${version}-bundle.jar">
      <fileset file="${dist.dir}/hot-runtime-${version}*" />
    </jar>
  </target>

  <target name="publish-to-maven-central-staging">

    <property name="maven.central.username" value="valarcon" />
    <!--
    <input message="Maven Central Username: " addproperty="maven.central.username" />
    -->

    <input message="Maven Central Password: "
           addproperty="maven.central.password">
      <handler type="secure" />
    </input>

    <ivy-configure file="ivysettings-nexus.xml" />
    <ivy-resolve file="ivy-hot.xml" />

    <ivy-publish resolver="nexus-deploy"
                 pubrevision="${version}"
                 overwrite="true"
                 publishivy="false">
      <artifacts pattern="dist/[artifact]-${version}(-[classifier]).[ext]" />
    </ivy-publish>

  </target>

  <!--
  <target name="make-pom">
    <ivy-makepom ivyfile="./ivy-hot.xml"
                 pomfile="./module.pom"
                 conf="default,runtime">
      <mapping conf="default" scope="compile" />
      <mapping conf="runtime" scope="runtime" />
    </ivy-makepom>
  </target>
  -->

</project>
