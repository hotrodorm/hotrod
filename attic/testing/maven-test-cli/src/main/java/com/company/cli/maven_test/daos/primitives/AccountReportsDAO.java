// Autogenerated by HotRod -- Do not edit.

package com.company.cli.maven_test.daos.primitives;

import java.io.Serializable;
import java.util.List;

import org.apache.ibatis.session.SqlSession;

import org.hotrod.runtime.interfaces.DaoWithOrder;
import org.hotrod.runtime.interfaces.OrderBy;
import org.hotrod.runtime.interfaces.Selectable;


import com.company.cli.maven_test.daos.AccountVolumeVO;
import com.company.cli.maven_test.daos.OldAccountVolumeVO;

import org.hotrod.runtime.livesql.expressions.ResultSetColumn;
import org.hotrod.runtime.livesql.dialects.SQLDialect;
import org.hotrod.runtime.livesql.metadata.NumberColumn;
import org.hotrod.runtime.livesql.metadata.StringColumn;
import org.hotrod.runtime.livesql.metadata.DateTimeColumn;
import org.hotrod.runtime.livesql.metadata.BooleanColumn;
import org.hotrod.runtime.livesql.metadata.ByteArrayColumn;
import org.hotrod.runtime.livesql.metadata.ObjectColumn;
import org.hotrod.runtime.livesql.metadata.Table;
import org.hotrod.runtime.livesql.expressions.predicates.Predicate;
import org.hotrod.runtime.livesql.queries.select.CriteriaWherePhase;
import org.hotrod.runtime.livesql.metadata.View;

import org.springframework.stereotype.Component;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;

@Component("accountReportsDAO")
public class AccountReportsDAO implements Serializable, ApplicationContextAware {

  private static final long serialVersionUID = 1L;

  @Autowired
  private SqlSession sqlSession;

  @Value("#{sqlDialectFactory.sqlDialect}")
  private SQLDialect sqlDialect;

  private ApplicationContext applicationContext;

  @Override
  public void setApplicationContext(final ApplicationContext applicationContext) throws BeansException {
    this.applicationContext = applicationContext;
  }

  // update applyPromotion

  /*
  * The SQL statement for this method is:



  */


  public static class ParamApplyPromotion {
    Integer minAmount;
    Integer prize;
  }

  public int applyPromotion(final Integer minAmount, final Integer prize) {
    ParamApplyPromotion param0 = new ParamApplyPromotion();
    param0.minAmount = minAmount;
    param0.prize = prize;
    return this.sqlSession.update(
      "com.company.cli.maven_test.daos.primitives.accountReportsDAO.applyPromotion", param0);
  }

  // select method: selectNewAccountsVolume

  /*
  * The SQL statement for this method is:


      select a.id, a.name, sum(abs(t.amount)) as total_txs
      from account a
      left join transaction t on t.account_id = a.id
      where a.created_on >= current_date - interval '3000 day'
      group by a.id
    

  */


  public List<AccountVolumeVO> selectNewAccountsVolume() {
    return this.sqlSession.selectList("com.company.cli.maven_test.daos.primitives.accountReportsDAO.select_selectNewAccountsVolume");
  }

  // select method: selectOldAccountsVolume

  /*
  * The SQL statement for this method is:


      select a.id, a.name, sum(abs(t.amount)) as total_txs
      from account a
      left join transaction t on t.account_id = a.id
      where a.created_on < current_date - interval '3000 day'
      group by a.id
    

  */


  public List<OldAccountVolumeVO> selectOldAccountsVolume() {
    return this.sqlSession.selectList("com.company.cli.maven_test.daos.primitives.accountReportsDAO.select_selectOldAccountsVolume");
  }

}
