<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.cli.maven_test.daos.primitives.accountAlert">

  <!-- columns -->

  <sql id="columns">
    raised_at,
    account_id,
    house_id
  </sql>

  <sql id="columnsWithAlias">
    ${alias}.raised_at,
    ${alias}.account_id,
    ${alias}.house_id
  </sql>

  <resultMap id="allColumns" type="com.company.cli.maven_test.daos.AccountAlertVO">
    <result property="raisedAt" column="raised_at" />
    <result property="accountId" column="account_id" />
    <result property="houseId" column="house_id" />
  </resultMap>

  <!-- select by PK: no mapping generated, since the table does not have a PK -->

  <!-- select by unique indexes: no mappings generated, since the table does not have UIs -->

  <!-- select by example -->

  <select id="selectByExample" resultMap="allColumns">
    select
      <include refid="columns" />
     from schema2.account_alert
    <where>
      <if test="p.raisedAt != null ">
        and raised_at = #{p.raisedAt,jdbcType=TIMESTAMP}
      </if>
      <if test="p.raisedAt == null and p.propertiesChangeLog.raisedAtWasSet">
        and raised_at is null
      </if>
      <if test="p.accountId != null ">
        and account_id = #{p.accountId,jdbcType=INTEGER}
      </if>
      <if test="p.accountId == null and p.propertiesChangeLog.accountIdWasSet">
        and account_id is null
      </if>
      <if test="p.houseId != null ">
        and house_id = #{p.houseId,jdbcType=INTEGER}
      </if>
      <if test="p.houseId == null and p.propertiesChangeLog.houseIdWasSet">
        and house_id is null
      </if>
    </where>
    <if test="o != null">
      order by ${o}
    </if>
  </select>

  <!-- select by criteria -->

  <select id="selectByCriteria" resultMap="allColumns">
    ${sql}
  </select>

  <!-- insert (no auto-generated columns) -->

  <insert id="insert">
    insert into schema2.account_alert (
      <trim prefixOverrides=", ">
        <if test="true">, raised_at</if>
        <if test="true">, account_id</if>
        <if test="true">, house_id</if>
      </trim>
      ) values (
      <trim prefixOverrides=", ">
        <if test="true">, #{raisedAt,jdbcType=TIMESTAMP}</if>
        <if test="true">, #{accountId,jdbcType=INTEGER}</if>
        <if test="true">, #{houseId,jdbcType=INTEGER}</if>
      </trim>
      )
  </insert>

  <!-- update by PK: no update mapping generated, since the table does not have a PK -->

  <!-- delete by PK: no delete mapping generated, since the table does not have a PK -->

  <!-- update by example -->

  <update id="updateByExample">
    update schema2.account_alert
    <set>
      <if test="values.propertiesChangeLog.raisedAtWasSet">raised_at = #{values.raisedAt,jdbcType=TIMESTAMP},</if>
      <if test="values.propertiesChangeLog.accountIdWasSet">account_id = #{values.accountId,jdbcType=INTEGER},</if>
      <if test="values.propertiesChangeLog.houseIdWasSet">house_id = #{values.houseId,jdbcType=INTEGER},</if>
    </set>
    <where>
      <if test="filter.raisedAt != null ">
        and raised_at = #{filter.raisedAt,jdbcType=TIMESTAMP}
      </if>
      <if test="filter.raisedAt == null and filter.propertiesChangeLog.raisedAtWasSet">
        and raised_at is null
      </if>
      <if test="filter.accountId != null ">
        and account_id = #{filter.accountId,jdbcType=INTEGER}
      </if>
      <if test="filter.accountId == null and filter.propertiesChangeLog.accountIdWasSet">
        and account_id is null
      </if>
      <if test="filter.houseId != null ">
        and house_id = #{filter.houseId,jdbcType=INTEGER}
      </if>
      <if test="filter.houseId == null and filter.propertiesChangeLog.houseIdWasSet">
        and house_id is null
      </if>
    </where>
  </update>

  <!-- delete by example -->

  <delete id="deleteByExample">
    delete from schema2.account_alert
    <where>
      <if test="raisedAt != null ">
        and raised_at = #{raisedAt,jdbcType=TIMESTAMP}
      </if>
      <if test="raisedAt == null and propertiesChangeLog.raisedAtWasSet">
        and raised_at is null
      </if>
      <if test="accountId != null ">
        and account_id = #{accountId,jdbcType=INTEGER}
      </if>
      <if test="accountId == null and propertiesChangeLog.accountIdWasSet">
        and account_id is null
      </if>
      <if test="houseId != null ">
        and house_id = #{houseId,jdbcType=INTEGER}
      </if>
      <if test="houseId == null and propertiesChangeLog.houseIdWasSet">
        and house_id is null
      </if>
    </where>
  </delete>

</mapper>
