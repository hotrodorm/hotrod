// Autogenerated by EmpusaMB. Do not edit.

package com.company.daos.primitives;

import java.io.Serializable;
import java.sql.SQLException;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.hotrod.runtime.tx.TxDemarcator;
import org.hotrod.runtime.tx.TxManager;

import com.company.daos.BigDepositDAO;

public class BigDepositDAOPrimitives
    implements TxDemarcator, Serializable {

  private static final long serialVersionUID = 1L;

  // DAO Properties (view columns)

  protected java.lang.String name = null;
  protected java.lang.Integer id = null;
  protected java.sql.Date completedAt = null;
  protected java.lang.Integer amount = null;
  protected java.lang.Integer accountId = null;

  // parameterized select

  public static List<BigDepositDAO> select(final java.lang.Integer minAmount)
      throws SQLException {
    TxManager txm = null;
    try {
      txm = getTxManager();
      SqlSession sqlSession = txm.getSqlSession();
      return select(sqlSession, minAmount);
    } finally {
      if (txm != null && !txm.isTransactionOngoing()) {
        txm.close();
      }
    }
  }

  public static List<BigDepositDAO> select(final SqlSession sqlSession, final java.lang.Integer minAmount) throws SQLException {
    BigDepositDAOPrimitivesParameter parameters = new BigDepositDAOPrimitivesParameter(minAmount);
    return sqlSession.selectList(
        "com.company.daos.primitives.bigDeposit.selectParameterized", parameters);
  }

  public static class BigDepositDAOPrimitivesParameter {

    private java.lang.Integer minAmount;

    public BigDepositDAOPrimitivesParameter(final java.lang.Integer minAmount) {
    this.minAmount = minAmount;
  }

    public java.lang.Integer getMinamount() {
      return minAmount;
    }

  }
  // getters & setters

  public final java.lang.String getName() {
    return this.name;
  }

  public final void setname(final java.lang.String name) {
    this.name = name;
  }

  public final java.lang.Integer getId() {
    return this.id;
  }

  public final void setid(final java.lang.Integer id) {
    this.id = id;
  }

  public final java.sql.Date getCompletedAt() {
    return this.completedAt;
  }

  public final void setcompleted_at(final java.sql.Date completedAt) {
    this.completedAt = completedAt;
  }

  public final java.lang.Integer getAmount() {
    return this.amount;
  }

  public final void setamount(final java.lang.Integer amount) {
    this.amount = amount;
  }

  public final java.lang.Integer getAccountId() {
    return this.accountId;
  }

  public final void setaccount_id(final java.lang.Integer accountId) {
    this.accountId = accountId;
  }

  // to string

  public String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder();
    sb.append("[");
    sb.append(this.name + ", ");
    sb.append(this.id + ", ");
    sb.append(this.completedAt + ", ");
    sb.append(this.amount + ", ");
    sb.append(this.accountId);
    sb.append("]");
    return sb.toString();
  }

  // Transaction demarcation

  private static TxManager txManager = null;

  public static TxManager getTxManager() throws SQLException {
    if (txManager == null) {
      synchronized (BigDepositDAOPrimitives.class) {
        if (txManager == null) {
          txManager = new TxManager(getSqlSessionFactory());
        }
      }
    }
    return txManager;
  }

  public static SqlSessionFactory getSqlSessionFactory() throws SQLException {
    return com.company.sessionfactory.SessionFactory.getInstance().getSqlSessionFactory();
  }

}
