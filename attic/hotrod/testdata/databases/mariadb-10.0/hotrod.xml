<?xml version="1.0"?>
<!DOCTYPE hotrod SYSTEM "hotrod.dtd">

<hotrod>

	<generators>
    <mybatis>
  		<daos gen-base-dir="gen/hotrod/daos" dao-package="hotrod.test.generation" />
		  <mappers gen-base-dir="gen/hotrod/mappers" relative-dir="persistence" />
		  <mybatis-configuration-template file="mybatis-config-template.xml" />
		  <session-factory singleton-full-class-name="sessionfactory.DatabaseSessionFactory" />
		  <select-generation temp-view-base-name="mybatis_temp_view" />
    </mybatis>
	</generators>

  <table name="config_values" /> <!-- No PK -->

	<table name="properties" />
	<table name="parameters">
		<column name="level2" java-type="java.lang.Long" jdbc-type="NUMERIC" />
	</table>
	<table name="log" />

  <table name="account" /> <!-- identity by default PK -->
  <table name="transaction" />  <!-- identity by default PK -->

	<table name="state_branch" />
	<table name="federal_branch" />
	<table name="client" />

  <table name="agent" /> <!-- identity by default PK -->

	<table name="codes" column-seam="_" /> <!-- identity by default PK -->

	<table name="quadrant" />
	<table name="application_config" />

	<table name="vehicle">
		<version-control-column name="version_number" />
		<column name="version_number" java-type="java.lang.Short"
			jdbc-type="NUMERIC" initial-value="4" min-value="-7" max-value="7" />
	</table>

	<table name="types_numeric" />
	<table name="types_char" />
	<table name="types_binary" />
	<table name="types_date_time" />
	<table name="types_other" />

<!--  
  <dao java-class-name="Sequences">
    <sequence name="seq_agent" />
    <sequence name="seq_codes" />
  </dao>
-->  
  
	<view name="tx_branch">
		<column name="amount" java-type="java.lang.Long" jdbc-type="NUMERIC" />
	</view>

	<select java-class-name="AccountTx0DAO">
    select a.* , t.*
    from account a, transaction t
    <complement>
    where t.account_id = a.id
        and a.current_balance &lt; 1000
    </complement>        
	</select>

	<select java-class-name="AccountTx1DAO">
    <parameter name="maxBalance" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
    <parameter name="minAmount" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
		<column name="account_id" java-type="java.lang.Long" jdbc-type="NUMERIC" />
 		select a.* , t.*
		  from account a, transaction t
		  where t.account_id = a.id
    <complement>
			  and a.current_balance &lt;= #{maxBalance}
			  and t.amount >= #{minAmount}
    	order by a.current_balance
    </complement>
	</select>

	<select java-class-name="UnusualTxDAO">
    <parameter name="maxBalance" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
    <parameter name="minAmount" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
    <parameter name="maxRows" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
    <parameter name="offset" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
    select a.* , t.*
    from account a, transaction t
    <complement>
    where t.account_id = a.id
      and a.current_balance &lt;= #{maxBalance}
      and t.amount >= #{minAmount}
      order by a.id, t.seq_id
      limit #{maxRows}
      offset #{offset}
    </complement>
	</select>

	<select java-class-name="MultParamSelectDAO">
    <parameter name="maxAmount" java-type="java.lang.Integer" jdbc-type="NUMERIC" />
    select a.* , t.*
    from account a, transaction t
    where t.account_id = a.id
    <complement>
      and a.current_balance &lt;= #{maxAmount}
      and t.amount &lt;= #{maxAmount}
      order by a.id, t.seq_id
    </complement>
	</select>

</hotrod>
