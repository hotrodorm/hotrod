// Autogenerated by HotRod -- Do not edit.

package com.company.daos.primitives;

import java.io.Serializable;
import java.util.List;

import org.apache.ibatis.session.SqlSession;

import org.hotrod.runtime.interfaces.DaoWithOrder;
import org.hotrod.runtime.interfaces.UpdateByExampleDao;
import org.hotrod.runtime.interfaces.OrderBy;

import com.company.daos.TypesOtherVO;

import org.hotrod.runtime.livesql.expressions.ResultSetColumn;
import org.hotrod.runtime.livesql.dialects.SQLDialect;
import org.hotrod.runtime.livesql.metadata.NumberColumn;
import org.hotrod.runtime.livesql.metadata.StringColumn;
import org.hotrod.runtime.livesql.metadata.DateTimeColumn;
import org.hotrod.runtime.livesql.metadata.BooleanColumn;
import org.hotrod.runtime.livesql.metadata.ByteArrayColumn;
import org.hotrod.runtime.livesql.metadata.ObjectColumn;
import org.hotrod.runtime.livesql.metadata.Table;
import org.hotrod.runtime.livesql.expressions.predicates.Predicate;
import org.hotrod.runtime.livesql.queries.select.CriteriaWherePhase;
import org.hotrod.runtime.livesql.metadata.View;

import org.springframework.stereotype.Component;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;

@Component("typesOtherDAO")
public class TypesOtherDAO implements Serializable, ApplicationContextAware {

  private static final long serialVersionUID = 1L;

  @Autowired
  private SqlSession sqlSession;

  @Value("#{sqlDialectFactory.sqlDialect}")
  private SQLDialect sqlDialect;

  private ApplicationContext applicationContext;

  @Override
  public void setApplicationContext(final ApplicationContext applicationContext) throws BeansException {
    this.applicationContext = applicationContext;
  }

  // no select by PK generated, since the table does not have a PK.

  // select by unique indexes: no unique indexes found -- skipped

  // select by example

  public List<com.company.daos.TypesOtherVO> selectByExample(final com.company.daos.TypesOtherVO example, final TypesOtherOrderBy... orderBies)
      {
    DaoWithOrder<com.company.daos.TypesOtherVO, TypesOtherOrderBy> dwo = //
        new DaoWithOrder<com.company.daos.TypesOtherVO, TypesOtherOrderBy>(example, orderBies);
    return this.sqlSession.selectList("com.company.daos.primitives.typesOther.selectByExample", dwo);
  }

  // select by criteria

  public CriteriaWherePhase<com.company.daos.TypesOtherVO> selectByCriteria(final TypesOtherDAO.TypesOtherTable from,
      final Predicate predicate) {
    return new CriteriaWherePhase<com.company.daos.TypesOtherVO>(from, this.sqlDialect, this.sqlSession,
        predicate, "com.company.daos.primitives.typesOther.selectByCriteria");
  }

  // insert

  public int insert(final com.company.daos.TypesOtherVO vo) {
    String id = "com.company.daos.primitives.typesOther.insert";
    return this.sqlSession.insert(id, vo);
  }

  // no update by PK generated, since the table does not have a PK.

  // no delete by PK generated, since the table does not have a PK.

  // update by example

  public int updateByExample(final com.company.daos.TypesOtherVO example, final com.company.daos.TypesOtherVO updateValues) {
    UpdateByExampleDao<com.company.daos.TypesOtherVO> fvd = //
      new UpdateByExampleDao<com.company.daos.TypesOtherVO>(example, updateValues);
    return this.sqlSession.update("com.company.daos.primitives.typesOther.updateByExample", fvd);
  }

  // delete by example

  public int deleteByExample(final com.company.daos.TypesOtherVO example) {
    return this.sqlSession.delete("com.company.daos.primitives.typesOther.deleteByExample", example);
  }

  // DAO ordering

  public enum TypesOtherOrderBy implements OrderBy {

    GEO1("types_other", "geo1", true), //
    GEO1$DESC("types_other", "geo1", false), //
    GEO2("types_other", "geo2", true), //
    GEO2$DESC("types_other", "geo2", false), //
    GEO3("types_other", "geo3", true), //
    GEO3$DESC("types_other", "geo3", false), //
    GEO4("types_other", "geo4", true), //
    GEO4$DESC("types_other", "geo4", false), //
    GEO5("types_other", "geo5", true), //
    GEO5$DESC("types_other", "geo5", false), //
    GEO6("types_other", "geo6", true), //
    GEO6$DESC("types_other", "geo6", false), //
    GEO7("types_other", "geo7", true), //
    GEO7$DESC("types_other", "geo7", false), //
    NET1("types_other", "net1", true), //
    NET1$DESC("types_other", "net1", false), //
    NET2("types_other", "net2", true), //
    NET2$DESC("types_other", "net2", false), //
    NET3("types_other", "net3", true), //
    NET3$DESC("types_other", "net3", false), //
    UUI1("types_other", "uui1", true), //
    UUI1$DESC("types_other", "uui1", false), //
    JSO1("types_other", "jso1", true), //
    JSO1$DESC("types_other", "jso1", false), //
    JSO2("types_other", "jso2", true), //
    JSO2$DESC("types_other", "jso2", false), //
    ARR1("types_other", "arr1", true), //
    ARR1$DESC("types_other", "arr1", false), //
    ARR2("types_other", "arr2", true), //
    ARR2$DESC("types_other", "arr2", false), //
    ARR3("types_other", "arr3", true), //
    ARR3$DESC("types_other", "arr3", false), //
    COM1("types_other", "com1", true), //
    COM1$DESC("types_other", "com1", false), //
    RAN1("types_other", "ran1", true), //
    RAN1$DESC("types_other", "ran1", false), //
    RAN2("types_other", "ran2", true), //
    RAN2$DESC("types_other", "ran2", false), //
    RAN3("types_other", "ran3", true), //
    RAN3$DESC("types_other", "ran3", false), //
    RAN4("types_other", "ran4", true), //
    RAN4$DESC("types_other", "ran4", false), //
    RAN5("types_other", "ran5", true), //
    RAN5$DESC("types_other", "ran5", false), //
    RAN6("types_other", "ran6", true), //
    RAN6$DESC("types_other", "ran6", false);

    private TypesOtherOrderBy(final String tableName, final String columnName,
        boolean ascending) {
      this.tableName = tableName;
      this.columnName = columnName;
      this.ascending = ascending;
    }

    private String tableName;
    private String columnName;
    private boolean ascending;

    public String getTableName() {
      return this.tableName;
    }

    public String getColumnName() {
      return this.columnName;
    }

    public boolean isAscending() {
      return this.ascending;
    }

  }

  // Database Table metadata

  public static TypesOtherTable newTable() {
    return new TypesOtherTable();
  }

  public static TypesOtherTable newTable(final String alias) {
    return new TypesOtherTable(alias);
  }

  public static class TypesOtherTable extends Table {

    // Properties

    public ObjectColumn geo1;
    public ObjectColumn geo2;
    public ObjectColumn geo3;
    public ObjectColumn geo4;
    public ObjectColumn geo5;
    public ObjectColumn geo6;
    public ObjectColumn geo7;
    public ObjectColumn net1;
    public ObjectColumn net2;
    public ObjectColumn net3;
    public ObjectColumn uui1;
    public ObjectColumn jso1;
    public ObjectColumn jso2;
    public ObjectColumn arr1;
    public ObjectColumn arr2;
    public ObjectColumn arr3;
    public ObjectColumn com1;
    public ObjectColumn ran1;
    public ObjectColumn ran2;
    public ObjectColumn ran3;
    public ObjectColumn ran4;
    public ObjectColumn ran5;
    public ObjectColumn ran6;

    // Constructors

    TypesOtherTable() {
      super(null, null, "types_other", "Table", null);
      initialize();
    }

    TypesOtherTable(final String alias) {
      super(null, null, "types_other", "Table", alias);
      initialize();
    }

    // Initialization

    private void initialize() {
      this.geo1 = new ObjectColumn(this, "geo1", "geo1");
      this.geo2 = new ObjectColumn(this, "geo2", "geo2");
      this.geo3 = new ObjectColumn(this, "geo3", "geo3");
      this.geo4 = new ObjectColumn(this, "geo4", "geo4");
      this.geo5 = new ObjectColumn(this, "geo5", "geo5");
      this.geo6 = new ObjectColumn(this, "geo6", "geo6");
      this.geo7 = new ObjectColumn(this, "geo7", "geo7");
      this.net1 = new ObjectColumn(this, "net1", "net1");
      this.net2 = new ObjectColumn(this, "net2", "net2");
      this.net3 = new ObjectColumn(this, "net3", "net3");
      this.uui1 = new ObjectColumn(this, "uui1", "uui1");
      this.jso1 = new ObjectColumn(this, "jso1", "jso1");
      this.jso2 = new ObjectColumn(this, "jso2", "jso2");
      this.arr1 = new ObjectColumn(this, "arr1", "arr1");
      this.arr2 = new ObjectColumn(this, "arr2", "arr2");
      this.arr3 = new ObjectColumn(this, "arr3", "arr3");
      this.com1 = new ObjectColumn(this, "com1", "com1");
      this.ran1 = new ObjectColumn(this, "ran1", "ran1");
      this.ran2 = new ObjectColumn(this, "ran2", "ran2");
      this.ran3 = new ObjectColumn(this, "ran3", "ran3");
      this.ran4 = new ObjectColumn(this, "ran4", "ran4");
      this.ran5 = new ObjectColumn(this, "ran5", "ran5");
      this.ran6 = new ObjectColumn(this, "ran6", "ran6");
    }

  }

}
