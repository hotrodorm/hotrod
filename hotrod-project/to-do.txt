To Do:

3.  Rethink DAOs, VOs, Model. Include config refactoring.
4.  Normalize CRUD methods. (Maybe add checks for not null PK when deleting/updating?) 
5.  LiveSQL: Add "CASE <expr> WHEN".
7.  Upgrade Date/Time data types. Use java.time.* (LocalDate, LocalTime, LocalTimestamp, ZonedDateTime, 
    OffsetDateTime, OffsetTime, Duration) instead of the old (java.sql.Timestamp, java.util.Date, java.sql.Time).
8.  Torcs.
9.  Implement LiveSQL specialized. Start with PostgreSQL 14?

10. DONE -- CTE check if available in database and throw UnsupportedException.
11. DONE -- Recursive CTE check if available in database and throw UnsupportedException.
12. DONE -- Scalar subqueries: Call validateTableReferences() and designateAliases(). 
13. DONE -- Naming columns in table expressions (DB2, PostgreSQL, SQL Server, MySQL).
14. DONE -- LAG() with one parameter crashes.
15. DONE -- Consider .asc() ordering by default.
16. DONE -- Check the anchor and recursive terms are defined before executing a recursive CTE.
    DONE -- sql.enclose()
    DONE -- Parameterize integers.

sql.select().from()
.union()
.select().from()
.union(sql.select().from().intersect().select().from())
.select().from()
.intersect()
.select().from()
.except()
.select().from()
.orderBy(sql.ordering("a").desc(), sql.ordering(3).desc())
.offset()
.limit()



LiveSQL experts names:
----------------------
explorer
traveler
guru
master
rover
rogue
expert
hero
ace
champion
paladin
nomad
roamer
rebel
heretic
maverick
agent
spy
navigator
specialist
scholar
pundit















