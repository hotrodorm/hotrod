RELEASING & PUBLISHING   
  
======================================================================
All-in-one
======================================================================

Verify the build is ready:

 $ export GPG_TTY=$(tty) && mvn -P release clean install

You can combine the whole Release & Publishing process into the single command line, shown below:

 $ mvn release:clean && mvn -B release:prepare && export GPG_TTY=$(tty) && mvn -P release release:perform && mvn release:clean && git pull

The above command line can be suitable for the typical release, and also for continuous integration/delivery. 

Note: When using the Nexus Staging Maven Plugin, it may fail because of "504 Gateway Time-out" errors thrown by Maven Central's server. This 
is usually due to slowness of the server. When this happens, the release process is unfinished. To finish it type:

 $ git checkout tags/<version>
 $ export GPG_TTY=$(tty) && mvn -P release clean deploy
 $ mvn release:clean && git pull && git checkout <my-working-branch>


======================================================================
Separate
======================================================================

Alternatively, you may want to run each part (prepare, perform, clean) separately.

1. Prepare
----------
This will change the SCM version, will tag it, and will advance the SCM version.

 $ mvn release:clean && mvn -B release:prepare
  
2. Perform
----------
Send release artifacts to Maven Central:

 $ export GPG_TTY=$(tty) && mvn -P release release:perform

Now, go to Maven Central, find the snapshot release and "Close" it. Maven Central will validate it; if successful
it will be closed after a few minutes. If the snapshot release is closed, it can now be "Released" to the world.

3. Clean up
-----------
Remove all temp files ans sync with the git repository:

 $ mvn release:clean && git pull


======================================================================
Optional
======================================================================

Change the project version
--------------------------

If you need a different project version for the next release (different from the default one) you can change it easily -- for the project
and all its submodules at once -- (for example to 1.3.0-SNAPSHOT) by typing:

 $ mvn versions:set -DnewVersion=1.3.0-SNAPSHOT versions:commit

